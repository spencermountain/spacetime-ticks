{"version":3,"file":"spacetime-ticks.js","sources":["../node_modules/spacetime/builds/spacetime.mjs","../src/_reduce.js","../src/methods.js","../_version.js","../src/index.js"],"sourcesContent":["function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n\nvar fns = createCommonjsModule(function (module, exports) {\n//git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\nexports.isLeapYear = year => (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n// unsurprisingly-nasty `typeof date` call\nexports.isDate = d => Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf());\nexports.isArray = input => Object.prototype.toString.call(input) === '[object Array]';\nexports.isObject = input => Object.prototype.toString.call(input) === '[object Object]';\n\nexports.zeroPad = (str, len = 2) => {\n  let pad = '0';\n  str = str + '';\n  return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str\n};\n\nexports.titleCase = str => {\n  if (!str) {\n    return ''\n  }\n  return str[0].toUpperCase() + str.substr(1)\n};\n\nexports.ordinal = i => {\n  let j = i % 10;\n  let k = i % 100;\n  if (j === 1 && k !== 11) {\n    return i + 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return i + 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return i + 'rd'\n  }\n  return i + 'th'\n};\n\n//strip 'st' off '1st'..\nexports.toCardinal = str => {\n  str = String(str);\n  str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1');\n  return parseInt(str, 10)\n};\n\n//used mostly for cleanup of unit names, like 'months'\nexports.normalize = (str = '') => {\n  str = str.toLowerCase().trim();\n  str = str.replace(/ies$/, 'y'); //'centuries'\n  str = str.replace(/s$/, '');\n  str = str.replace(/-/g, '');\n  if (str === 'day') {\n    return 'date'\n  }\n  return str\n};\n\nexports.getEpoch = tmp => {\n  //support epoch\n  if (typeof tmp === 'number') {\n    return tmp\n  }\n  //suport date objects\n  if (exports.isDate(tmp)) {\n    return tmp.getTime()\n  }\n  if (tmp.epoch) {\n    return tmp.epoch\n  }\n  return null\n};\n\n//make sure this input is a spacetime obj\nexports.beADate = (d, s) => {\n  if (exports.isObject(d) === false) {\n    return s.clone().set(d)\n  }\n  return d\n};\n\nexports.formatTimezone = (offset, delimiter = '') => {\n  const absOffset = Math.abs(offset);\n  const sign = offset > 0 ? '+' : '-';\n  return `${sign}${exports.zeroPad(absOffset)}${delimiter}00`\n};\n});\nvar fns_1 = fns.isLeapYear;\nvar fns_2 = fns.isDate;\nvar fns_3 = fns.isArray;\nvar fns_4 = fns.isObject;\nvar fns_5 = fns.zeroPad;\nvar fns_6 = fns.titleCase;\nvar fns_7 = fns.ordinal;\nvar fns_8 = fns.toCardinal;\nvar fns_9 = fns.normalize;\nvar fns_10 = fns.getEpoch;\nvar fns_11 = fns.beADate;\nvar fns_12 = fns.formatTimezone;\n\nconst zeroPad = fns.zeroPad;\n\nconst toString = d =>\n  zeroPad(d.getMonth() + 1) + '/' + zeroPad(d.getDate()) + ':' + zeroPad(d.getHours());\n\n// a timezone will begin with a specific offset in january\n// then some will switch to something else between november-march\nconst shouldChange = (epoch, start, end, defaultOffset) => {\n  //note: this has a cray order-of-operations issue\n  //we can't get the date, without knowing the timezone, and vice-versa\n  //it's possible that we can miss a dst-change by a few hours.\n  let d = new Date(epoch);\n  //(try to mediate this a little?)\n  let bias = d.getTimezoneOffset() || 0;\n  let shift = bias + defaultOffset * 60; //in minutes\n  shift = shift * 60 * 1000; //in ms\n  d = new Date(epoch + shift);\n\n  let current = toString(d);\n  //eg. is it after ~november?\n  if (current >= start) {\n    //eg. is it before ~march~ too?\n    if (current < end) {\n      return true\n    }\n  }\n  return false\n};\nvar summerTime = shouldChange;\n\n// this method avoids having to do a full dst-calculation on every operation\n// it reproduces some things in ./index.js, but speeds up spacetime considerably\nconst quickOffset = s => {\n  let zones = s.timezones;\n  let obj = zones[s.tz];\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz);\n    return 0\n  }\n  if (obj.dst === undefined) {\n    return obj.offset\n  }\n\n  //get our two possible offsets\n  let jul = obj.offset;\n  let dec = obj.offset + 1; // assume it's the same for now\n  if (obj.hem === 'n') {\n    dec = jul - 1;\n  }\n  let split = obj.dst.split('->');\n  let inSummer = summerTime(s.epoch, split[0], split[1], jul);\n  if (inSummer === true) {\n    return jul\n  }\n  return dec\n};\nvar quick = quickOffset;\n\nvar _build = {\n\t\"9|s\": \"2/dili,2/jayapura\",\n\t\"9|n\": \"2/chita,2/khandyga,2/pyongyang,2/seoul,2/tokyo,11/palau\",\n\t\"9.5|s|04/07:03->10/06:02\": \"4/adelaide,4/broken_hill,4/south,4/yancowinna\",\n\t\"9.5|s\": \"4/darwin,4/north\",\n\t\"8|s\": \"12/casey,2/kuala_lumpur,2/makassar,2/singapore,4/perth,4/west\",\n\t\"8|n|03/25:03->09/29:23\": \"2/ulan_bator\",\n\t\"8|n\": \"2/brunei,2/choibalsan,2/chongqing,2/chungking,2/harbin,2/hong_kong,2/irkutsk,2/kuching,2/macao,2/macau,2/manila,2/shanghai,2/taipei,2/ujung_pandang,2/ulaanbaatar\",\n\t\"8.75|s\": \"4/eucla\",\n\t\"7|s\": \"12/davis,2/jakarta,9/christmas\",\n\t\"7|n\": \"2/bangkok,2/barnaul,2/ho_chi_minh,2/hovd,2/krasnoyarsk,2/novokuznetsk,2/novosibirsk,2/phnom_penh,2/pontianak,2/saigon,2/tomsk,2/vientiane\",\n\t\"6|s\": \"12/vostok\",\n\t\"6|n\": \"2/almaty,2/bishkek,2/dacca,2/dhaka,2/kashgar,2/omsk,2/qyzylorda,2/thimbu,2/thimphu,2/urumqi,9/chagos\",\n\t\"6.5|n\": \"2/rangoon,9/cocos\",\n\t\"5|s\": \"12/mawson,9/kerguelen\",\n\t\"5|n\": \"2/aqtau,2/aqtobe,2/ashgabat,2/ashkhabad,2/atyrau,2/baku,2/dushanbe,2/karachi,2/oral,2/samarkand,2/tashkent,2/yekaterinburg,9/maldives\",\n\t\"5.75|n\": \"2/kathmandu,2/katmandu\",\n\t\"5.5|n\": \"2/calcutta,2/colombo,2/kolkata\",\n\t\"4|s\": \"9/reunion\",\n\t\"4|n\": \"2/dubai,2/muscat,2/tbilisi,2/yerevan,8/astrakhan,8/samara,8/saratov,8/ulyanovsk,8/volgograd,2/volgograd,9/mahe,9/mauritius\",\n\t\"4.5|n|03/22:00->09/21:24\": \"2/tehran\",\n\t\"4.5|n\": \"2/kabul\",\n\t\"3|s\": \"12/syowa,9/antananarivo\",\n\t\"3|n|03/31:03->10/27:04\": \"2/nicosia,8/athens,8/bucharest,8/helsinki,8/kiev,8/mariehamn,8/nicosia,8/riga,8/sofia,8/tallinn,8/uzhgorod,8/vilnius,8/zaporozhye\",\n\t\"3|n|03/31:02->10/27:03\": \"8/chisinau,8/tiraspol\",\n\t\"3|n|03/31:00->10/26:24\": \"2/beirut\",\n\t\"3|n|03/29:02->10/27:02\": \"2/jerusalem,2/tel_aviv\",\n\t\"3|n|03/29:00->10/25:01\": \"2/amman\",\n\t\"3|n|03/29:00->10/24:24\": \"2/damascus\",\n\t\"3|n|03/23:01->10/26:01\": \"2/gaza,2/hebron\",\n\t\"3|n\": \"0/addis_ababa,0/asmara,0/asmera,0/dar_es_salaam,0/djibouti,0/juba,0/kampala,0/mogadishu,0/nairobi,2/aden,2/baghdad,2/bahrain,2/istanbul,2/kuwait,2/qatar,2/riyadh,8/istanbul,8/kirov,8/minsk,8/moscow,8/simferopol,9/comoro,9/mayotte\",\n\t\"2|s|03/31:02->10/27:02\": \"12/troll\",\n\t\"2|s\": \"0/gaborone,0/harare,0/johannesburg,0/lubumbashi,0/lusaka,0/maputo,0/maseru,0/mbabane\",\n\t\"2|n|03/31:02->10/27:03\": \"0/ceuta,arctic/longyearbyen,3/jan_mayen,8/amsterdam,8/andorra,8/belgrade,8/berlin,8/bratislava,8/brussels,8/budapest,8/busingen,8/copenhagen,8/gibraltar,8/ljubljana,8/luxembourg,8/madrid,8/malta,8/monaco,8/oslo,8/paris,8/podgorica,8/prague,8/rome,8/san_marino,8/sarajevo,8/skopje,8/stockholm,8/tirane,8/vaduz,8/vatican,8/vienna,8/warsaw,8/zagreb,8/zurich\",\n\t\"2|n\": \"0/blantyre,0/bujumbura,0/cairo,0/khartoum,0/kigali,0/tripoli,8/kaliningrad\",\n\t\"1|s|04/02:01->09/03:03\": \"0/windhoek\",\n\t\"1|s\": \"0/kinshasa,0/luanda\",\n\t\"1|n|05/05:03->06/09:02\": \"0/casablanca,0/el_aaiun\",\n\t\"1|n|03/31:01->10/27:02\": \"3/canary,3/faeroe,3/faroe,3/madeira,8/belfast,8/dublin,8/guernsey,8/isle_of_man,8/jersey,8/lisbon,8/london\",\n\t\"1|n\": \"0/algiers,0/bangui,0/brazzaville,0/douala,0/lagos,0/libreville,0/malabo,0/ndjamena,0/niamey,0/porto-novo,0/tunis\",\n\t\"14|n\": \"11/kiritimati\",\n\t\"13|s|04/07:04->09/29:03\": \"11/apia\",\n\t\"13|s|01/15:02->11/05:03\": \"11/tongatapu\",\n\t\"13|n\": \"11/enderbury,11/fakaofo\",\n\t\"12|s|04/07:03->09/29:02\": \"12/mcmurdo,12/south_pole,11/auckland\",\n\t\"12|s|01/13:03->11/03:02\": \"11/fiji\",\n\t\"12|n\": \"2/anadyr,2/kamchatka,2/srednekolymsk,11/funafuti,11/kwajalein,11/majuro,11/nauru,11/tarawa,11/wake,11/wallis\",\n\t\"12.75|s|04/07:03->04/07:02\": \"11/chatham\",\n\t\"11|s\": \"12/macquarie,11/bougainville\",\n\t\"11|n\": \"2/magadan,2/sakhalin,11/efate,11/guadalcanal,11/kosrae,11/noumea,11/pohnpei,11/ponape\",\n\t\"11.5|n\": \"11/norfolk\",\n\t\"10|s|04/07:03->10/06:02\": \"4/act,4/canberra,4/currie,4/hobart,4/melbourne,4/nsw,4/sydney,4/tasmania,4/victoria\",\n\t\"10|s\": \"12/dumontdurville,4/brisbane,4/lindeman,4/queensland\",\n\t\"10|n\": \"2/ust-nera,2/vladivostok,2/yakutsk,11/chuuk,11/guam,11/port_moresby,11/saipan,11/truk,11/yap\",\n\t\"10.5|s|04/07:01->10/06:02\": \"4/lhi,4/lord_howe\",\n\t\"0|n|03/31:00->10/27:01\": \"1/scoresbysund,3/azores\",\n\t\"0|n\": \"0/abidjan,0/accra,0/bamako,0/banjul,0/bissau,0/conakry,0/dakar,0/freetown,0/lome,0/monrovia,0/nouakchott,0/ouagadougou,0/sao_tome,0/timbuktu,1/danmarkshavn,3/reykjavik,3/st_helena,13/gmt,13/gmt+0,13/gmt-0,13/gmt0,13/greenwich,13/utc,13/universal,13/zulu\",\n\t\"-9|n|03/10:02->11/03:02\": \"1/adak,1/atka\",\n\t\"-9|n\": \"11/gambier\",\n\t\"-9.5|n\": \"11/marquesas\",\n\t\"-8|n|03/10:02->11/03:02\": \"1/anchorage,1/juneau,1/metlakatla,1/nome,1/sitka,1/yakutat\",\n\t\"-8|n\": \"11/pitcairn\",\n\t\"-7|n|03/10:02->11/03:02\": \"1/dawson,1/ensenada,1/los_angeles,1/santa_isabel,1/tijuana,1/vancouver,1/whitehorse,6/pacific,6/yukon,10/bajanorte\",\n\t\"-7|n\": \"1/creston,1/dawson_creek,1/hermosillo,1/phoenix\",\n\t\"-6|s|04/06:22->09/07:22\": \"7/easterisland,11/easter\",\n\t\"-6|n|04/07:02->10/27:02\": \"1/chihuahua,1/mazatlan,10/bajasur\",\n\t\"-6|n|03/10:02->11/03:02\": \"1/boise,1/cambridge_bay,1/denver,1/edmonton,1/inuvik,1/ojinaga,1/shiprock,1/yellowknife,6/mountain\",\n\t\"-6|n\": \"1/belize,1/costa_rica,1/el_salvador,1/guatemala,1/managua,1/regina,1/swift_current,1/tegucigalpa,6/east-saskatchewan,6/saskatchewan,11/galapagos\",\n\t\"-5|s\": \"1/lima,1/rio_branco,5/acre\",\n\t\"-5|n|04/07:02->10/27:02\": \"1/bahia_banderas,1/merida,1/mexico_city,1/monterrey,10/general\",\n\t\"-5|n|03/12:03->11/05:01\": \"1/north_dakota\",\n\t\"-5|n|03/10:02->11/03:02\": \"1/chicago,1/knox_in,1/matamoros,1/menominee,1/rainy_river,1/rankin_inlet,1/resolute,1/winnipeg,6/central\",\n\t\"-5|n\": \"1/atikokan,1/bogota,1/cancun,1/cayman,1/coral_harbour,1/eirunepe,1/guayaquil,1/jamaica,1/panama,1/porto_acre\",\n\t\"-4|s|05/13:23->08/13:01\": \"12/palmer\",\n\t\"-4|s|04/06:24->09/08:00\": \"1/santiago,7/continental\",\n\t\"-4|s|03/23:24->10/06:00\": \"1/asuncion\",\n\t\"-4|s|02/16:24->11/03:00\": \"1/campo_grande,1/cuiaba\",\n\t\"-4|s\": \"1/la_paz,1/manaus,5/west\",\n\t\"-4|n|03/12:03->11/05:01\": \"1/indiana,1/kentucky\",\n\t\"-4|n|03/10:02->11/03:02\": \"1/detroit,1/fort_wayne,1/grand_turk,1/indianapolis,1/iqaluit,1/louisville,1/montreal,1/nassau,1/new_york,1/nipigon,1/pangnirtung,1/port-au-prince,1/thunder_bay,1/toronto,6/eastern\",\n\t\"-4|n|03/10:00->11/03:01\": \"1/havana\",\n\t\"-4|n\": \"1/anguilla,1/antigua,1/aruba,1/barbados,1/blanc-sablon,1/boa_vista,1/caracas,1/curacao,1/dominica,1/grenada,1/guadeloupe,1/guyana,1/kralendijk,1/lower_princes,1/marigot,1/martinique,1/montserrat,1/port_of_spain,1/porto_velho,1/puerto_rico,1/santo_domingo,1/st_barthelemy,1/st_kitts,1/st_lucia,1/st_thomas,1/st_vincent,1/tortola,1/virgin\",\n\t\"-3|s|02/16:24->11/03:00\": \"1/sao_paulo,5/east\",\n\t\"-3|s\": \"1/argentina,1/buenos_aires,1/cordoba,1/fortaleza,1/montevideo,1/punta_arenas,12/rothera,3/stanley\",\n\t\"-3|n|03/10:02->11/03:02\": \"1/glace_bay,1/goose_bay,1/halifax,1/moncton,1/thule,3/bermuda,6/atlantic\",\n\t\"-3|n\": \"1/araguaina,1/bahia,1/belem,1/catamarca,1/cayenne,1/jujuy,1/maceio,1/mendoza,1/paramaribo,1/recife,1/rosario,1/santarem\",\n\t\"-2|s\": \"5/denoronha\",\n\t\"-2|n|03/30:22->10/26:23\": \"1/godthab\",\n\t\"-2|n|03/10:02->11/03:02\": \"1/miquelon\",\n\t\"-2|n\": \"1/noronha,3/south_georgia\",\n\t\"-2.5|n|03/10:02->11/03:02\": \"1/st_johns,6/newfoundland\",\n\t\"-1|n\": \"3/cape_verde\",\n\t\"-11|n\": \"11/midway,11/niue,11/pago_pago,11/samoa\",\n\t\"-10|n\": \"11/honolulu,11/johnston,11/rarotonga,11/tahiti\"\n};\n\nvar _build$1 = /*#__PURE__*/Object.freeze({\n\t'default': _build\n});\n\n//prefixes for iana names..\nvar _prefixes = [\n  'africa',\n  'america',\n  'asia',\n  'atlantic',\n  'australia',\n  'brazil',\n  'canada',\n  'chile',\n  'europe',\n  'indian',\n  'mexico',\n  'pacific',\n  'antarctica',\n  'etc'\n];\n\nvar data = getCjsExportFromNamespace(_build$1);\n\nlet all = {};\nObject.keys(data).forEach(k => {\n  let split = k.split('|');\n  let obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  };\n  if (split[2]) {\n    obj.dst = split[2];\n  }\n  let names = data[k].split(',');\n  names.forEach(str => {\n    str = str.replace(/(^[0-9]+)\\//, (before, num) => {\n      num = Number(num);\n      return _prefixes[num] + '/'\n    });\n    all[str] = obj;\n  });\n});\n\nall['utc'] = {\n  offset: 0,\n  hem: 'n' //(sorry)\n};\n\n//add etc/gmt+n\nfor (let i = -13; i <= 13; i += 0.5) {\n  let num = i;\n  if (num > 0) {\n    num = '+' + num;\n  }\n  let name = 'etc/gmt' + num;\n  all[name] = {\n    offset: i * -1, //they're negative!\n    hem: 'n' //(sorry)\n  };\n  name = 'utc/gmt' + num; //this one too, why not.\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  };\n}\n// console.log(all)\n\n// console.log(Object.keys(all).length)\nvar unpack = all;\n\n//find the implicit iana code for this machine.\n//safely query the Intl object\n//based on - https://bitbucket.org/pellepim/jstimezonedetect/src\nconst fallbackTZ = 'utc'; //\n\n//this Intl object is not supported often, yet\nconst safeIntl = () => {\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return null\n  }\n  let format = Intl.DateTimeFormat();\n  if (typeof format === 'undefined' || typeof format.resolvedOptions === 'undefined') {\n    return null\n  }\n  let timezone = format.resolvedOptions().timeZone;\n  if (!timezone) {\n    return null\n  }\n  return timezone.toLowerCase()\n};\n\nconst guessTz = () => {\n  let timezone = safeIntl();\n  if (timezone === null) {\n    return fallbackTZ\n  }\n  return timezone\n};\n//do it once per computer\nvar guessTz_1 = guessTz;\n\nconst isOffset = /(\\-?[0-9]+)h(rs)?/i;\nconst isNumber = /(\\-?[0-9]+)/;\nconst utcOffset = /utc([\\-+]?[0-9]+)/i;\nconst gmtOffset = /gmt([\\-+]?[0-9]+)/i;\n\nconst toIana = function(num) {\n  num = Number(num);\n  if (num > -13 && num < 13) {\n    num = num * -1; //it's opposite!\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n    return 'etc/gmt' + num\n  }\n  return null\n};\n\nconst parseOffset = function(tz) {\n  // '+5hrs'\n  let m = tz.match(isOffset);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'utc+5'\n  m = tz.match(utcOffset);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'GMT-5' (not opposite)\n  m = tz.match(gmtOffset);\n  if (m !== null) {\n    let num = Number(m[1]) * -1;\n    return toIana(num)\n  }\n  // '+5'\n  m = tz.match(isNumber);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  return null\n};\nvar parseOffset_1 = parseOffset;\n\nconst local = guessTz_1();\n\n//add all the city names by themselves\nconst cities = Object.keys(unpack).reduce((h, k) => {\n  let city = k.split('/')[1] || '';\n  city = city.replace(/_/g, ' ');\n  h[city] = k;\n  return h\n}, {});\n\n//try to match these against iana form\nconst normalize = tz => {\n  tz = tz.replace(/ time/g, '');\n  tz = tz.replace(/ (standard|daylight|summer)/g, '');\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1');\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1');\n  tz = tz.replace(/\\beuropean/g, 'europe');\n  tz = tz.replace(/\\islands/g, 'island');\n  return tz\n};\n\n// try our best to reconcile the timzone to this given string\nconst lookupTz = (str, zones) => {\n  if (!str) {\n    return local\n  }\n  let tz = str.trim();\n  let split = str.split('/');\n  //support long timezones like 'America/Argentina/Rio_Gallegos'\n  if (split.length > 2 && zones.hasOwnProperty(tz) === false) {\n    tz = split[0] + '/' + split[1];\n  }\n  tz = tz.toLowerCase();\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //lookup more loosely..\n  tz = normalize(tz);\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //try city-names\n  if (cities.hasOwnProperty(tz) === true) {\n    return cities[tz]\n  }\n  // //try to parse '-5h'\n  if (/[0-9]/.test(tz) === true) {\n    let id = parseOffset_1(tz);\n    if (id) {\n      return id\n    }\n  }\n\n  throw new Error(\n    \"Spacetime: Cannot find timezone named: '\" + str + \"'. Please enter an IANA timezone id.\"\n  )\n};\nvar find = lookupTz;\n\nlet o = {\n  millisecond: 1\n};\no.second = 1000;\no.minute = 60000;\no.hour = 3.6e6; // dst is supported post-hoc\no.day = 8.64e7; //\no.date = o.day;\no.month = 8.64e7 * 29.5; //(average)\no.week = 6.048e8;\no.year = 3.154e10; // leap-years are supported post-hoc\n//add plurals\nObject.keys(o).forEach(k => {\n  o[k + 's'] = o[k];\n});\nvar milliseconds = o;\n\n//basically, step-forward/backward until js Date object says we're there.\nconst walk = (s, n, fn, unit, previous) => {\n  let current = s.d[fn]();\n  if (current === n) {\n    return //already there\n  }\n  let startUnit = previous === null ? null : s.d[previous]();\n  let original = s.epoch;\n  //try to get it as close as we can\n  let diff = n - current;\n  s.epoch += milliseconds[unit] * diff;\n\n  //DST edge-case: if we are going many days, be a little conservative\n  if (unit === 'day' && Math.abs(diff) > 28) {\n    //but don't push it over a month\n    if (n < 28) {\n      s.epoch += milliseconds.hour;\n    }\n  }\n  //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n  const halfStep = milliseconds[unit] / 2;\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep;\n  }\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep;\n  }\n  //oops, did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original;\n    // i mean, but make it close...\n    s.epoch += milliseconds[unit] * diff * 0.97; // i guess?\n  }\n};\n//find the desired date by a increment/check while loop\nconst units = {\n  year: {\n    valid: n => n > -4000 && n < 4000,\n    walkTo: (s, n) => walk(s, n, 'getFullYear', 'year', null)\n  },\n  month: {\n    valid: n => n >= 0 && n <= 11,\n    walkTo: (s, n) => {\n      let d = s.d;\n      let current = d.getMonth();\n      let original = s.epoch;\n      let startUnit = d.getYear();\n      if (current === n) {\n        return\n      }\n      //try to get it as close as we can..\n      let diff = n - current;\n      s.epoch += milliseconds.day * (diff * 28); //special case\n      //oops, did we change the year? revert it.\n      if (startUnit !== s.d.getYear()) {\n        s.epoch = original;\n      }\n      //incriment by day\n      while (s.d.getMonth() < n) {\n        s.epoch += milliseconds.day;\n      }\n      while (s.d.getMonth() > n) {\n        s.epoch -= milliseconds.day;\n      }\n    }\n  },\n  date: {\n    valid: n => n > 0 && n <= 31,\n    walkTo: (s, n) => walk(s, n, 'getDate', 'day', 'getMonth')\n  },\n  hour: {\n    valid: n => n >= 0 && n < 24,\n    walkTo: (s, n) => walk(s, n, 'getHours', 'hour', 'getDate')\n  },\n  minute: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => walk(s, n, 'getMinutes', 'minute', 'getHours')\n  },\n  second: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch;\n    }\n  },\n  millisecond: {\n    valid: n => n >= 0 && n < 1000,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch;\n    }\n  }\n};\n\nconst walkTo = (s, wants) => {\n  let keys = Object.keys(units);\n  let old = s.clone();\n  for (let i = 0; i < keys.length; i++) {\n    let k = keys[i];\n    let n = wants[k];\n    if (n === undefined) {\n      n = old[k]();\n    }\n    if (typeof n === 'string') {\n      n = parseInt(n, 10);\n    }\n    //make-sure it's valid\n    if (!units[k].valid(n)) {\n      s.epoch = null;\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n);\n      }\n      return\n    }\n    // console.log(k, n)\n    units[k].walkTo(s, n);\n  }\n  return\n};\n\nvar walk_1 = walkTo;\n\nlet shortMonths = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sept',\n  'oct',\n  'nov',\n  'dec'\n];\nlet longMonths = [\n  'january',\n  'february',\n  'march',\n  'april',\n  'may',\n  'june',\n  'july',\n  'august',\n  'september',\n  'october',\n  'november',\n  'december'\n];\n\nfunction buildMapping() {\n  const obj = {\n    sep: 8 //support this format\n  };\n  for (let i = 0; i < shortMonths.length; i++) {\n    obj[shortMonths[i]] = i;\n  }\n  for (let i = 0; i < longMonths.length; i++) {\n    obj[longMonths[i]] = i;\n  }\n  return obj\n}\n\nvar months = {\n  short: () => shortMonths,\n  long: () => longMonths,\n  mapping: () => buildMapping(),\n  set: i18n => {\n    shortMonths = i18n.short || shortMonths;\n    longMonths = i18n.long || longMonths;\n  }\n};\n\n//pull-apart ISO offsets, like \"+0100\"\nconst parseOffset$1 = (s, offset) => {\n  if (!offset) {\n    return s\n  }\n  //this is a fancy-move\n  if (offset === 'Z') {\n    offset = '+0000';\n  }\n\n  // according to ISO8601, tz could be hh:mm, hhmm or hh\n  // so need few more steps before the calculation.\n  let num = 0;\n\n  // for (+-)hh:mm\n  if (/^[\\+-]?[0-9]{2}:[0-9]{2}$/.test(offset)) {\n    //support \"+01:00\"\n    if (/:00/.test(offset) === true) {\n      offset = offset.replace(/:00/, '');\n    }\n    //support \"+01:30\"\n    if (/:30/.test(offset) === true) {\n      offset = offset.replace(/:30/, '.5');\n    }\n  }\n\n  // for (+-)hhmm\n  if (/^[\\+-]?[0-9]{4}$/.test(offset)) {\n    offset = offset.replace(/30$/, '.5');\n  }\n\n  num = parseFloat(offset);\n\n  //divide by 100 or 10 - , \"+0100\", \"+01\"\n  if (Math.abs(num) > 100) {\n    num = num / 100;\n  }\n  //okay, try to match it to a utc timezone\n  //remember - this is opposite! a -5 offset maps to Etc/GMT+5  ¯\\_(:/)_/¯\n  //https://askubuntu.com/questions/519550/why-is-the-8-timezone-called-gmt-8-in-the-filesystem\n  num *= -1;\n\n  if (num >= 0) {\n    num = '+' + num;\n  }\n  let tz = 'etc/gmt' + num;\n  let zones = s.timezones;\n\n  if (zones[tz]) {\n    // log a warning if we're over-writing a given timezone?\n    // console.log('changing timezone to: ' + tz)\n    s.tz = tz;\n  }\n  return s\n};\nvar parseOffset_1$1 = parseOffset$1;\n\nconst parseTime = (s, str = '') => {\n  str = str.replace(/^\\s+/, '').toLowerCase(); //trim\n  //formal time formats - 04:30.23\n  let arr = str.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\\.]?([0-9]{1,4})?/);\n  if (arr !== null) {\n    //validate it a little\n    let h = Number(arr[1]);\n    if (h < 0 || h > 24) {\n      return s.startOf('day')\n    }\n    let m = Number(arr[2]); //don't accept '5:3pm'\n    if (arr[2].length < 2 || m < 0 || m > 59) {\n      return s.startOf('day')\n    }\n    s = s.hour(h);\n    s = s.minute(m);\n    s = s.seconds(arr[3] || 0);\n    s = s.millisecond(arr[4] || 0);\n    //parse-out am/pm\n    let ampm = str.match(/[\\b0-9](am|pm)\\b/);\n    if (ampm !== null && ampm[1]) {\n      s = s.ampm(ampm[1]);\n    }\n    return s\n  }\n  //try an informal form - 5pm (no minutes)\n  arr = str.match(/([0-9]+) ?(am|pm)/);\n  if (arr !== null && arr[1]) {\n    let h = Number(arr[1]);\n    //validate it a little..\n    if (h > 12 || h < 1) {\n      return s.startOf('day')\n    }\n    s = s.hour(arr[1] || 0);\n    s = s.ampm(arr[2]);\n    s = s.startOf('hour');\n    return s\n  }\n  //no time info found, use start-of-day\n  s = s.startOf('day');\n  return s\n};\nvar parseTime_1 = parseTime;\n\nconst monthLengths = [\n  31, // January - 31 days\n  28, // February - 28 days in a common year and 29 days in leap years\n  31, // March - 31 days\n  30, // April - 30 days\n  31, // May - 31 days\n  30, // June - 30 days\n  31, // July - 31 days\n  31, // August - 31 days\n  30, // September - 30 days\n  31, // October - 31 days\n  30, // November - 30 days\n  31 // December - 31 days\n];\nvar monthLengths_1 = monthLengths;\n\nconst isLeapYear = fns.isLeapYear;\n\n//given a month, return whether day number exists in it\nconst hasDate = obj => {\n  //invalid values\n  if (monthLengths_1.hasOwnProperty(obj.month) !== true) {\n    return false\n  }\n  //support leap-year in february\n  if (obj.month === 1) {\n    if (isLeapYear(obj.year) && obj.date <= 29) {\n      return true\n    } else {\n      return obj.date <= 28\n    }\n  }\n  //is this date too-big for this month?\n  let max = monthLengths_1[obj.month] || 0;\n  if (obj.date <= max) {\n    return true\n  }\n  return false\n};\nvar hasDate_1 = hasDate;\n\nconst months$1 = months.mapping();\n\n\n\n\n\nconst parseYear = (str = '') => {\n  //support '18 -> 2018\n  // str = str.replace(/^'([0-9]{2})/, '20$1')\n  // str = str.replace('([0-9]+) ?b\\.?c\\.?$', '-$1')\n  let year = parseInt(str.trim(), 10);\n  year = year || new Date().getFullYear();\n  return year\n};\n\nconst strFmt = [\n  //iso-this 1998-05-30T22:00:00:000Z, iso-that 2017-04-03T08:00:00-0700\n  {\n    reg: /^(\\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\\-\\+:]+)?$/,\n    parse: (s, arr, givenTz, options) => {\n      let month = parseInt(arr[2], 10) - 1;\n      let obj = {\n        year: arr[1],\n        month,\n        date: arr[3]\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      parseOffset_1$1(s, arr[5]);\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //iso \"2015-03-25\" or \"2015/03/25\" //0-based-months!\n  {\n    reg: /^([0-9]{4})[\\-\\/]([0-9]{1,2})[\\-\\/]([0-9]{1,2})$/,\n    parse: (s, arr) => {\n      let obj = {\n        year: arr[1],\n        month: parseInt(arr[2], 10) - 1,\n        date: parseInt(arr[3], 10)\n      };\n      if (obj.month >= 12) {\n        //support yyyy/dd/mm (weird, but ok)\n        obj.date = parseInt(arr[2], 10);\n        obj.month = parseInt(arr[3], 10) - 1;\n      }\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  //short - uk \"03/25/2015\"  //0-based-months!\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([0-9]{1,2})[\\-\\/]?([0-9]{4})?$/,\n    parse: (s, arr) => {\n      let month = parseInt(arr[1], 10) - 1;\n      let date = parseInt(arr[2], 10);\n      if (month >= 12) {\n        //support yyyy/dd/mm (weird, but ok)\n        month = parseInt(arr[2], 10) - 1;\n        date = parseInt(arr[1], 10);\n      }\n      let year = arr[3] || new Date().getFullYear();\n      let obj = {\n        year,\n        month,\n        date\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  //Long \"Mar 25 2015\"\n  //February 22, 2017 15:30:00\n  {\n    reg: /^([a-z]+) ([0-9]{1,2}(?:st|nd|rd|th)?),?( [0-9]{4})?( ([0-9:]+( ?am| ?pm)?))?$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[1].toLowerCase()];\n      let year = parseYear(arr[3]);\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[2] || '')\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //February 2017 (implied date)\n  {\n    reg: /^([a-z]+) ([0-9]{4})$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[1].toLowerCase()];\n      let year = parseYear(arr[2]);\n      let obj = {\n        year,\n        month,\n        date: 1\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //Long \"25 Mar 2015\"\n  {\n    reg: /^([0-9]{1,2}(?:st|nd|rd|th)?) ([a-z]+),?( [0-9]{4})?$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[2].toLowerCase()];\n      let year = parseYear(arr[3]);\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[1])\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  {\n    // '1992'\n    reg: /^[0-9]{4}$/i,\n    parse: (s, arr) => {\n      let year = parseYear(arr[0]);\n      let d = new Date();\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  {\n    // '200bc'\n    reg: /^[0-9,]+ ?b\\.?c\\.?$/i,\n    parse: (s, arr) => {\n      let str = arr[0] || '';\n      //make negative-year\n      str = str.replace(/^([0-9,]+) ?b\\.?c\\.?$/i, '-$1');\n      //remove commas\n      str = str.replace(/,/g, '');\n      let year = parseInt(str.trim(), 10);\n      let d = new Date();\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  }\n];\n\nvar strParse = strFmt;\n\nconst dates = {\n  now: s => {\n    s.epoch = Date.now();\n    return s\n  },\n  tonight: s => {\n    s.epoch = Date.now();\n    s = s.hour(18);\n    return s\n  },\n  today: s => {\n    s.epoch = Date.now();\n    return s\n  },\n  tomorrow: s => {\n    s.epoch = Date.now();\n    s = s.add(1, 'day');\n    s = s.startOf('day');\n    return s\n  },\n  yesterday: s => {\n    s.epoch = Date.now();\n    s = s.subtract(1, 'day');\n    s = s.startOf('day');\n    return s\n  },\n  christmas: s => {\n    let year = new Date().getFullYear();\n    s = s.set([year, 11, 25, 18, 0, 0]); // Dec 25\n    return s\n  },\n  'new years': s => {\n    let year = new Date().getFullYear();\n    s = s.set([year, 11, 31, 18, 0, 0]); // Dec 31\n    return s\n  }\n};\ndates['new years eve'] = dates['new years'];\nvar namedDates = dates;\n\n//we have to actually parse these inputs ourselves\n//  -  can't use built-in js parser ;(\n//=========================================\n// ISO Date\t  \"2015-03-25\"\n// Short Date\t\"03/25/2015\" or \"2015/03/25\"\n// Long Date\t\"Mar 25 2015\" or \"25 Mar 2015\"\n// Full Date\t\"Wednesday March 25 2015\"\n//=========================================\n\n//-- also -\n// if the given epoch is really small, they've probably given seconds and not milliseconds\n// anything below this number is likely (but not necessarily) a mistaken input.\n// this may seem like an arbitrary number, but it's 'within jan 1970'\n// this is only really ambiguous until 2054 or so\nconst minimumEpoch = 2500000000;\n\nconst defaults = {\n  year: new Date().getFullYear(),\n  month: 0,\n  date: 1\n};\n\n//support [2016, 03, 01] format\nconst handleArray = (s, arr) => {\n  let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n  for (let i = 0; i < order.length; i++) {\n    let num = arr[i] || defaults[order[i]] || 0;\n    s = s[order[i]](num);\n  }\n  return s\n};\n//support {year:2016, month:3} format\nconst handleObject = (s, obj) => {\n  obj = Object.assign({}, defaults, obj);\n  let keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    let unit = keys[i];\n    //make sure we have this method\n    if (s[unit] === undefined || typeof s[unit] !== 'function') {\n      continue\n    }\n    //make sure the value is a number\n    if (obj[unit] === null || obj[unit] === undefined || obj[unit] === '') {\n      continue\n    }\n    let num = obj[unit] || defaults[unit] || 0;\n    s = s[unit](num);\n  }\n  return s\n};\n\n//find the epoch from different input styles\nconst parseInput = (s, input, givenTz) => {\n  //if we've been given a epoch number, it's easy\n  if (typeof input === 'number') {\n    if (input > 0 && input < minimumEpoch && s.silent === false) {\n      console.warn('  - Warning: You are setting the date to January 1970.');\n      console.warn('       -   did input seconds instead of milliseconds?');\n    }\n    s.epoch = input;\n    return s\n  }\n  //set tmp time\n  s.epoch = Date.now();\n  if (input === null || input === undefined) {\n    return s //k, we're good.\n  }\n  //support input of Date() object\n  if (fns.isDate(input) === true) {\n    s.epoch = input.getTime();\n    return s\n  }\n  //support [2016, 03, 01] format\n  if (fns.isArray(input) === true) {\n    s = handleArray(s, input);\n    return s\n  }\n  //support {year:2016, month:3} format\n  if (fns.isObject(input) === true) {\n    //support spacetime object as input\n    if (input.epoch) {\n      s.epoch = input.epoch;\n      s.tz = input.tz;\n      return s\n    }\n    s = handleObject(s, input);\n    return s\n  }\n  //input as a string..\n  if (typeof input !== 'string') {\n    return s\n  }\n  //little cleanup..\n  input = input.replace(/\\b(mon|tues|wed|wednes|thu|thurs|fri|sat|satur|sun)(day)?\\b/i, '');\n  input = input.replace(/,/g, '');\n  input = input.replace(/ +/g, ' ').trim();\n  //try some known-words, like 'now'\n  if (namedDates.hasOwnProperty(input) === true) {\n    s = namedDates[input](s);\n    return s\n  }\n  //try each text-parse template, use the first good result\n  for (let i = 0; i < strParse.length; i++) {\n    let m = input.match(strParse[i].reg);\n    if (m) {\n      s = strParse[i].parse(s, m, givenTz);\n      return s\n    }\n  }\n  if (s.silent === false) {\n    console.warn(\"Warning: couldn't parse date-string: '\" + input + \"'\");\n  }\n  s.epoch = null;\n  return s\n};\nvar input = parseInput;\n\nlet shortDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nlet longDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n\nvar days = {\n  short: () => shortDays,\n  long: () => longDays,\n  set: i18n => {\n    shortDays = i18n.short || shortDays;\n    longDays = i18n.long || longDays;\n  }\n};\n\n// create the timezone offset part of an iso timestamp\n// it's kind of nuts how involved this is\n// \"+01:00\", \"+0100\", or simply \"+01\"\nconst isoOffset = s => {\n  let offset = s.timezone().current.offset;\n  const isNegative = offset < 0;\n  let minute = '00';\n  //handle 5.5 → '5:30'\n  if (Math.abs(offset % 1) === 0.5) {\n    minute = '30';\n    if (offset >= 0) {\n      offset = Math.floor(offset);\n    } else {\n      offset = Math.ceil(offset);\n    }\n  }\n  if (isNegative) {\n    //handle negative sign\n    offset *= -1;\n    offset = fns.zeroPad(offset, 2);\n    offset = '-' + offset;\n  } else {\n    offset = fns.zeroPad(offset, 2);\n    offset = '+' + offset;\n  }\n  offset = offset + ':' + minute;\n  //'Z' means 00\n  if (offset === '+00:00') {\n    offset = 'Z';\n  }\n  return offset\n};\n\nvar _offset = isoOffset;\n\nconst format = {\n  day: s => fns.titleCase(s.dayName()),\n  'day-short': s => fns.titleCase(days.short()[s.day()]),\n  'day-number': s => s.day(),\n  'day-ordinal': s => fns.ordinal(s.day()),\n  'day-pad': s => fns.zeroPad(s.day()),\n\n  date: s => s.date(),\n  'date-ordinal': s => fns.ordinal(s.date()),\n  'date-pad': s => fns.zeroPad(s.date()),\n\n  month: s => fns.titleCase(s.monthName()),\n  'month-short': s => fns.titleCase(months.short()[s.month()]),\n  'month-number': s => s.month(),\n  'month-ordinal': s => fns.ordinal(s.month()),\n  'month-pad': s => fns.zeroPad(s.month()),\n  'iso-month': s => fns.zeroPad(s.month() + 1), //1-based months\n\n  year: s => {\n    let year = s.year();\n    if (year > 0) {\n      return year\n    }\n    year = Math.abs(year);\n    return year + ' BC'\n  },\n  'year-short': s => {\n    let year = s.year();\n    if (year > 0) {\n      return `'${String(s.year()).substr(2, 4)}`\n    }\n    year = Math.abs(year);\n    return year + ' BC'\n  },\n  'iso-year': s => {\n    let year = s.year();\n    let isNegative = year < 0;\n    let str = fns.zeroPad(Math.abs(year), 4); //0-padded\n    if (isNegative) {\n      //negative years are for some reason 6-digits ('-00008')\n      str = fns.zeroPad(str, 6);\n      str = '-' + str;\n    }\n    return str\n  },\n\n  time: s => s.time(),\n  'time-24': s => `${s.hour24()}:${fns.zeroPad(s.minute())}`,\n  hour: s => s.hour12(),\n  'hour-pad': s => fns.zeroPad(s.hour12()),\n  'hour-24': s => s.hour24(),\n  'hour-24-pad': s => fns.zeroPad(s.hour24()),\n\n  minute: s => s.minute(),\n  'minute-pad': s => fns.zeroPad(s.minute()),\n  second: s => s.second(),\n  'second-pad': s => fns.zeroPad(s.second()),\n\n  ampm: s => s.ampm(),\n  quarter: s => 'Q' + s.quarter(),\n  season: s => s.season(),\n  era: s => s.era(),\n  timezone: s => s.timezone().name,\n  offset: s => _offset(s),\n\n  numeric: s => `${s.year()}/${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, // yyyy/mm/dd\n  'numeric-us': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}/${s.year()}`, // mm/dd/yyyy\n  'numeric-uk': s => `${fns.zeroPad(s.date())}/${fns.zeroPad(s.month() + 1)}/${s.year()}`, //dd/mm/yyyy\n  'mm/dd': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, //mm/dd\n\n  // ... https://en.wikipedia.org/wiki/ISO_8601 ;(((\n  iso: s => {\n    let year = s.format('iso-year');\n    let month = fns.zeroPad(s.month() + 1); //1-based months\n    let date = fns.zeroPad(s.date());\n    let hour = fns.zeroPad(s.h24());\n    let minute = fns.zeroPad(s.minute());\n    let second = fns.zeroPad(s.second());\n    let ms = fns.zeroPad(s.millisecond(), 3);\n    let offset = _offset(s);\n    return `${year}-${month}-${date}T${hour}:${minute}:${second}.${ms}${offset}` //2018-03-09T08:50:00.000-05:00\n  },\n  'iso-short': s => {\n    let month = fns.zeroPad(s.month() + 1); //1-based months\n    let date = fns.zeroPad(s.date());\n    return `${s.year()}-${month}-${date}` //2017-02-15\n  },\n  'iso-utc': s => {\n    return new Date(s.epoch).toISOString() //2017-03-08T19:45:28.367Z\n  },\n\n  //i made these up\n  nice: s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.time()}`,\n  'nice-year': s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.year()}`,\n  'nice-day': s =>\n    `${days.short()[s.day()]} ${fns.titleCase(months.short()[s.month()])} ${fns.ordinal(s.date())}`,\n  'nice-full': s =>\n    `${s.dayName()} ${fns.titleCase(s.monthName())} ${fns.ordinal(s.date())}, ${s.time()}`\n};\n//aliases\nconst aliases = {\n  'day-name': 'day',\n  'month-name': 'month',\n  'iso 8601': 'iso',\n  'time-h24': 'time-24',\n  'time-12': 'time',\n  'time-h12': 'time',\n  tz: 'timezone',\n  'day-num': 'day-number',\n  'month-num': 'month-number',\n  'month-iso': 'iso-month',\n  'year-iso': 'iso-year',\n  'nice-short': 'nice',\n  mdy: 'numeric-us',\n  dmy: 'numeric-uk',\n  ymd: 'numeric',\n  'yyyy/mm/dd': 'numeric',\n  'mm/dd/yyyy': 'numeric-us',\n  'dd/mm/yyyy': 'numeric-us',\n  'little-endian': 'numeric-uk',\n  'big-endian': 'numeric',\n  'day-nice': 'nice-day'\n};\nObject.keys(aliases).forEach(k => (format[k] = format[aliases[k]]));\n\nconst printFormat = (s, str = '') => {\n  //don't print anything if it's an invalid date\n  if (s.isValid() !== true) {\n    return ''\n  }\n  //support .format('month')\n  if (format.hasOwnProperty(str)) {\n    let out = String(format[str](s) || '');\n    if (str !== 'ampm') {\n      out = fns.titleCase(out);\n    }\n    return out\n  }\n  //support '{hour}:{minute}' notation\n  if (str.indexOf('{') !== -1) {\n    let sections = /\\{(.+?)\\}/g;\n    str = str.replace(sections, (_, fmt) => {\n      fmt = fmt.toLowerCase().trim();\n      if (format.hasOwnProperty(fmt)) {\n        return String(format[fmt](s) || '')\n      }\n      return ''\n    });\n    return str\n  }\n\n  return s.format('iso-short')\n};\nvar format_1 = printFormat;\n\nconst pad = fns.zeroPad;\nconst formatTimezone = fns.formatTimezone;\n//parse this insane unix-time-templating thing, from the 19th century\n//http://unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns\n\n//time-symbols we support\nconst mapping = {\n  G: s => s.era(),\n  GG: s => s.era(),\n  GGG: s => s.era(),\n  GGGG: s => (s.era() === 'AD' ? 'Anno Domini' : 'Before Christ'),\n  //year\n  y: s => s.year(),\n  yy: s => {\n    //last two chars\n    return parseInt(String(s.year()).substr(2, 4), 10)\n  },\n  yyy: s => s.year(),\n  yyyy: s => s.year(),\n  yyyyy: s => '0' + s.year(),\n  // u: (s) => {},//extended non-gregorian years\n\n  //quarter\n  Q: s => s.quarter(),\n  QQ: s => s.quarter(),\n  QQQ: s => s.quarter(),\n  QQQQ: s => s.quarter(),\n\n  //month\n  M: s => s.month() + 1,\n  MM: s => pad(s.month() + 1),\n  MMM: s => s.format('month-short'),\n  MMMM: s => s.format('month'),\n\n  //week\n  w: s => s.week(),\n  ww: s => pad(s.week()),\n  //week of month\n  // W: (s) => s.week(),\n\n  //date of month\n  d: s => s.date(),\n  dd: s => pad(s.date()),\n  //date of year\n  D: s => s.dayOfYear(),\n  DD: s => pad(s.dayOfYear()),\n  DDD: s => pad(s.dayOfYear(), 3),\n\n  // F: (s) => {},//date of week in month\n  // g: (s) => {},//modified julian day\n\n  //day\n  E: s => s.format('day-short'),\n  EE: s => s.format('day-short'),\n  EEE: s => s.format('day-short'),\n  EEEE: s => s.format('day'),\n  EEEEE: s => s.format('day')[0],\n  e: s => s.day(),\n  ee: s => s.day(),\n  eee: s => s.format('day-short'),\n  eeee: s => s.format('day'),\n  eeeee: s => s.format('day')[0],\n\n  //am/pm\n  a: s => s.ampm().toUpperCase(),\n  aa: s => s.ampm().toUpperCase(),\n  aaa: s => s.ampm().toUpperCase(),\n  aaaa: s => s.ampm().toUpperCase(),\n\n  //hour\n  h: s => s.h12(),\n  hh: s => pad(s.h12()),\n  H: s => s.hour(),\n  HH: s => pad(s.hour()),\n  // j: (s) => {},//weird hour format\n\n  m: s => s.minute(),\n  mm: s => pad(s.minute()),\n  s: s => s.second(),\n  ss: s => pad(s.second()),\n  //milliseconds in the day\n  A: s => s.epoch - s.startOf('day').epoch,\n  //timezone\n  z: s => s.timezone().name,\n  zz: s => s.timezone().name,\n  zzz: s => s.timezone().name,\n  zzzz: s => s.timezone().name,\n  Z: s => formatTimezone(s.timezone().current.offset),\n  ZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZZ: s => formatTimezone(s.timezone().current.offset, ':')\n};\n\nconst addAlias = (char, to, n) => {\n  let name = char;\n  let toName = to;\n  for (let i = 0; i < n; i += 1) {\n    mapping[name] = mapping[toName];\n    name += char;\n    toName += to;\n  }\n};\naddAlias('q', 'Q', 4);\naddAlias('L', 'M', 4);\naddAlias('Y', 'y', 4);\naddAlias('c', 'e', 4);\naddAlias('k', 'H', 2);\naddAlias('K', 'h', 2);\naddAlias('S', 's', 2);\naddAlias('v', 'z', 4);\naddAlias('V', 'Z', 4);\n\nconst unixFmt = (s, str) => {\n  let chars = str.split('');\n  //combine consecutive chars, like 'yyyy' as one.\n  let arr = [chars[0]];\n  let quoteOn = false;\n  for (let i = 1; i < chars.length; i += 1) {\n    //support quoted substrings\n    if (chars[i] === `'`) {\n      quoteOn = !quoteOn;\n      //support '', meaning one tick\n      if (quoteOn === true && chars[i + 1] && chars[i + 1] === \"'\") {\n        quoteOn = true;\n      } else {\n        continue\n      }\n    }\n    //merge it with the last one\n    if (quoteOn === true || chars[i] === arr[arr.length - 1][0]) {\n      arr[arr.length - 1] += chars[i];\n    } else {\n      arr.push(chars[i]);\n    }\n  }\n  return arr.reduce((txt, c) => {\n    if (mapping[c] !== undefined) {\n      txt += mapping[c](s) || '';\n    } else {\n      txt += c;\n    }\n    return txt\n  }, '')\n};\nvar unixFmt_1 = unixFmt;\n\nconst units$1 = ['year', 'season', 'quarter', 'month', 'week', 'day', 'quarterHour', 'hour', 'minute'];\n\nconst doUnit = function(s, k) {\n  let start = s.clone().startOf(k);\n  let end = s.clone().endOf(k);\n  let duration = end.epoch - start.epoch;\n  let percent = (s.epoch - start.epoch) / duration;\n  return parseFloat(percent.toFixed(2))\n};\n\n//how far it is along, from 0-1\nconst progress = (s, unit) => {\n  if (unit) {\n    unit = fns.normalize(unit);\n    return doUnit(s, unit)\n  }\n  let obj = {};\n  units$1.forEach(k => {\n    obj[k] = doUnit(s, k);\n  });\n  return obj\n};\n\nvar progress_1 = progress;\n\n//round to either current, or +1 of this unit\nconst nearest = (s, unit) => {\n  //how far have we gone?\n  let prog = s.progress();\n  unit = fns.normalize(unit);\n  //fix camel-case for this one\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour';\n  }\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit);\n    }\n    // go to start\n    s = s.startOf(unit);\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\");\n  }\n  return s\n};\nvar nearest_1 = nearest;\n\n//increment until dates are the same\nconst climb = (a, b, unit) => {\n  let i = 0;\n  a = a.clone();\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit);\n    i += 1;\n  }\n  //oops, we went too-far..\n  if (a.isAfter(b, unit)) {\n    i -= 1;\n  }\n  return i\n};\n\n// do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\nconst diffOne = (a, b, unit) => {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit)\n  } else {\n    return climb(b, a, unit) * -1 //reverse it\n  }\n};\n\nvar one = diffOne;\n\n// don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year();\n  // should we decrement it by 1?\n  a = a.year(b.year());\n  if (a.isAfter(b)) {\n    years -= 1;\n  }\n  return years\n};\n\n// use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\nconst diff = function(a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch;\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  };\n  obj.minutes = parseInt(obj.seconds / 60, 10);\n  obj.hours = parseInt(obj.minutes / 60, 10);\n\n  //do the year\n  let tmp = a.clone();\n  obj.years = fastYear(tmp, b);\n  tmp = a.add(obj.years, 'year');\n\n  //there's always 12 months in a year...\n  obj.months = obj.years * 12;\n  tmp = a.add(obj.months, 'month');\n  obj.months += one(tmp, b, 'month');\n\n  // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n  obj.weeks = obj.years * 52;\n  tmp = a.add(obj.weeks, 'week');\n  obj.weeks += one(tmp, b, 'week');\n\n  // there's always atleast 7 days in a week\n  obj.days = obj.weeks * 7;\n  tmp = a.add(obj.days, 'day');\n  obj.days += one(tmp, b, 'day');\n\n  return obj\n};\nvar waterfall = diff;\n\nconst reverseDiff = function(obj) {\n  Object.keys(obj).forEach(k => {\n    obj[k] *= -1;\n  });\n  return obj\n};\n\n// this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\nconst main = function(a, b, unit) {\n  b = fns.beADate(b, a);\n  //reverse values, if necessary\n  let reversed = false;\n  if (a.isAfter(b)) {\n    let tmp = a;\n    a = b;\n    b = tmp;\n    reversed = true;\n  }\n  //compute them all (i know!)\n  let obj = waterfall(a, b);\n  if (reversed) {\n    obj = reverseDiff(obj);\n  }\n  //return just the requested unit\n  if (unit) {\n    //make sure it's plural-form\n    unit = fns.normalize(unit);\n    if (/s$/.test(unit) !== true) {\n      unit += 's';\n    }\n    if (unit === 'dates') {\n      unit = 'days';\n    }\n    return obj[unit]\n  }\n  return obj\n};\n\nvar diff$1 = main;\n\n//by spencermountain + Shaun Grady\n\n//our conceptual 'break-points' for each unit\nconst qualifiers = {\n  months: {\n    almost: 10,\n    over: 4\n  },\n  days: {\n    almost: 25,\n    over: 10\n  },\n  hours: {\n    almost: 20,\n    over: 8\n  },\n  minutes: {\n    almost: 50,\n    over: 20\n  },\n  seconds: {\n    almost: 50,\n    over: 20\n  }\n};\n\n//get number of hours/minutes... between the two dates\nfunction getDiff(a, b) {\n  const isBefore = a.isBefore(b);\n  const later = isBefore ? b : a;\n  let earlier = isBefore ? a : b;\n  earlier = earlier.clone();\n  const diff = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  Object.keys(diff).forEach(unit => {\n    if (earlier.isSame(later, unit)) {\n      return\n    }\n    let max = earlier.diff(later, unit);\n    earlier = earlier.add(max, unit);\n    diff[unit] = max;\n  });\n\n  //reverse it, if necessary\n  if (isBefore) {\n    Object.keys(diff).forEach(u => {\n      if (diff[u] !== 0) {\n        diff[u] *= -1;\n      }\n    });\n  }\n  return diff\n}\n\n// Expects a plural unit arg\nfunction pluralize(value, unit) {\n  if (value === 1) {\n    unit = unit.slice(0, -1);\n  }\n  return value + ' ' + unit\n}\n\n//create the human-readable diff between the two dates\nconst since = (start, end) => {\n  end = fns.beADate(end, start);\n  const diff = getDiff(start, end);\n  const isNow = Object.keys(diff).every(u => !diff[u]);\n  if (isNow === true) {\n    return {\n      diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now'\n    }\n  }\n  let rounded;\n  let qualified;\n  let precise;\n  let englishValues = [];\n\n  //go through each value and create its text-representation\n  Object.keys(diff).forEach((unit, i, units) => {\n    const value = Math.abs(diff[unit]);\n    if (value === 0) {\n      return\n    }\n    const englishValue = pluralize(value, unit);\n    englishValues.push(englishValue);\n    if (!rounded) {\n      rounded = qualified = englishValue;\n      if (i > 4) {\n        return\n      }\n      //is it a 'almost' something, etc?\n      const nextUnit = units[i + 1];\n      const nextValue = Math.abs(diff[nextUnit]);\n      if (nextValue > qualifiers[nextUnit].almost) {\n        rounded = pluralize(value + 1, unit);\n        qualified = 'almost ' + rounded;\n      } else if (nextValue > qualifiers[nextUnit].over) qualified = 'over ' + englishValue;\n    }\n  });\n  //make them into a string\n  precise = englishValues.splice(0, 2).join(', ');\n  //handle before/after logic\n  if (start.isAfter(end) === true) {\n    rounded += ' ago';\n    qualified += ' ago';\n    precise += ' ago';\n  } else {\n    rounded = 'in ' + rounded;\n    qualified = 'in ' + qualified;\n    precise = 'in ' + precise;\n  }\n  return {\n    diff,\n    rounded,\n    qualified,\n    precise\n  }\n};\n\nvar since_1 = since;\n\n//https://www.timeanddate.com/calendar/aboutseasons.html\n// Spring - from March 1 to May 31;\n// Summer - from June 1 to August 31;\n// Fall (autumn) - from September 1 to November 30; and,\n// Winter - from December 1 to February 28 (February 29 in a leap year).\nvar seasons = {\n  north: [\n    ['spring', 2, 1], //spring march 1\n    ['summer', 5, 1], //june 1\n    ['fall', 8, 1], //sept 1\n    ['autumn', 8, 1], //sept 1\n    ['winter', 11, 1] //dec 1\n  ],\n  south: [\n    ['fall', 2, 1], //march 1\n    ['autumn', 2, 1], //march 1\n    ['winter', 5, 1], //june 1\n    ['spring', 8, 1], //sept 1\n    ['summer', 11, 1] //dec 1\n  ]\n};\n\nvar quarters = [\n  null,\n  [0, 1], //jan 1\n  [3, 1], //apr 1\n  [6, 1], //july 1\n  [9, 1] //oct 1\n];\n\nconst units$2 = {\n  minute: s => {\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  quarterhour: s => {\n    let minute = s.minutes();\n    if (minute >= 45) {\n      s = s.minutes(45);\n    } else if (minute >= 30) {\n      s = s.minutes(30);\n    } else if (minute >= 15) {\n      s = s.minutes(15);\n    } else {\n      s = s.minutes(0);\n    }\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  hour: s => {\n    walk_1(s, {\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  day: s => {\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  week: s => {\n    let original = s.clone();\n    s = s.day(s._weekStart); //monday\n    if (s.isAfter(original)) {\n      s = s.subtract(1, 'week');\n    }\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  month: s => {\n    walk_1(s, {\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  quarter: s => {\n    let q = s.quarter();\n    if (quarters[q]) {\n      walk_1(s, {\n        month: quarters[q][0],\n        date: quarters[q][1],\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n    }\n    return s\n  },\n  season: s => {\n    let current = s.season();\n    let hem = 'north';\n    if (s.hemisphere() === 'South') {\n      hem = 'south';\n    }\n    for (let i = 0; i < seasons[hem].length; i++) {\n      if (seasons[hem][i][0] === current) {\n        //winter goes between years\n        let year = s.year();\n        if (current === 'winter' && s.month() < 3) {\n          year -= 1;\n        }\n        walk_1(s, {\n          year,\n          month: seasons[hem][i][1],\n          date: seasons[hem][i][2],\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        });\n        return s\n      }\n    }\n    return s\n  },\n  year: s => {\n    walk_1(s, {\n      month: 0,\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  decade: s => {\n    s = s.startOf('year');\n    let year = s.year();\n    let decade = parseInt(year / 10, 10) * 10;\n    s = s.year(decade);\n    return s\n  },\n  century: s => {\n    s = s.startOf('year');\n    let year = s.year();\n    let decade = parseInt(year / 100, 10) * 100;\n    s = s.year(decade);\n    return s\n  }\n};\nunits$2.date = units$2.day;\n\nconst startOf = (a, unit) => {\n  let s = a.clone();\n  unit = fns.normalize(unit);\n  if (units$2[unit]) {\n    return units$2[unit](s)\n  }\n  if (unit === 'summer' || unit === 'winter') {\n    s = s.season(unit);\n    return units$2.season(s)\n  }\n  return s\n};\n\n//piggy-backs off startOf\nconst endOf = (a, unit) => {\n  let s = a.clone();\n  unit = fns.normalize(unit);\n  if (units$2[unit]) {\n    s = units$2[unit](s);\n    s = s.add(1, unit);\n    s = s.subtract(1, 'milliseconds');\n    return s\n  }\n  return s\n};\nvar startOf_1 = {\n  startOf,\n  endOf\n};\n\n//is it 'wednesday'?\nconst isDay = function(unit) {\n  if (days.short().find(s => s === unit)) {\n    return true\n  }\n  if (days.long().find(s => s === unit)) {\n    return true\n  }\n  return false\n};\n\n// return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\nconst every = function(start, unit = '', end) {\n  if (!unit || !end) {\n    return []\n  }\n  //cleanup unit param\n  unit = fns.normalize(unit);\n  //cleanup to param\n  end = start.clone().set(end);\n  //swap them, if they're backwards\n  if (start.isAfter(end)) {\n    let tmp = start;\n    start = end;\n    end = tmp;\n  }\n\n  //support 'every wednesday'\n  let d = start.clone();\n  if (isDay(unit)) {\n    d = d.next(unit);\n    unit = 'week';\n  } else {\n    d = d.next(unit);\n  }\n  //okay, actually start doing it\n  let result = [];\n  while (d.isBefore(end)) {\n    result.push(d);\n    d = d.add(1, unit);\n  }\n  return result\n};\nvar every_1 = every;\n\nconst parseDst = dst => {\n  if (!dst) {\n    return []\n  }\n  return dst.split('->')\n};\n\nconst titleCase = str => {\n  str = str[0].toUpperCase() + str.substr(1);\n  str = str.replace(/\\/gmt/, '/GMT');\n  str = str.replace(/[\\/_]([a-z])/gi, s => {\n    return s.toUpperCase()\n  });\n  return str\n};\n\n//get metadata about this timezone\nconst timezone = s => {\n  let zones = s.timezones;\n  let tz = s.tz;\n  if (zones.hasOwnProperty(tz) === false) {\n    tz = find(s.tz, zones);\n  }\n  if (tz === null) {\n    if (s.silent === false) {\n      console.warn(\"Warn: could not find given or local timezone - '\" + s.tz + \"'\");\n    }\n    return {\n      current: {\n        epochShift: 0\n      }\n    }\n  }\n  let found = zones[tz];\n  let result = {\n    name: titleCase(tz),\n    hasDst: Boolean(found.dst),\n    default_offset: found.offset,\n    //do north-hemisphere version as default (sorry!)\n    hemisphere: found.hem === 's' ? 'South' : 'North',\n    current: {}\n  };\n\n  if (result.hasDst) {\n    let arr = parseDst(found.dst);\n    result.change = {\n      start: arr[0],\n      back: arr[1]\n    };\n  }\n  //find the offsets for summer/winter times\n  //(these variable names are north-centric)\n  let summer = found.offset; // (july)\n  let winter = summer; // (january) assume it's the same for now\n  if (result.hasDst === true) {\n    if (result.hemisphere === 'North') {\n      winter = summer - 1;\n    } else {\n      //southern hemisphere\n      winter = found.offset + 1;\n    }\n  }\n\n  //find out which offset to use right now\n  //use 'summer' time july-time\n  if (result.hasDst === false) {\n    result.current.offset = summer;\n    result.current.isDST = false;\n  } else if (summerTime(s.epoch, result.change.start, result.change.back, summer) === true) {\n    result.current.offset = summer;\n    result.current.isDST = result.hemisphere === 'North'; //dst 'on' in winter in north\n  } else {\n    //use 'winter' january-time\n    result.current.offset = winter;\n    result.current.isDST = result.hemisphere === 'South'; //dst 'on' in summer in south\n  }\n  return result\n};\nvar timezone_1 = timezone;\n\n//the spacetime instance methods (also, the API)\nconst methods = {\n  set: function(input$1, tz) {\n    let s = this.clone();\n    s = input(s, input$1);\n    if (tz) {\n      this.tz = find(tz);\n    }\n    return s\n  },\n  timezone: function() {\n    return timezone_1(this)\n  },\n  isDST: function() {\n    return timezone_1(this).current.isDST\n  },\n  hasDST: function() {\n    return timezone_1(this).hasDst\n  },\n  offset: function() {\n    return timezone_1(this).current.offset * 60\n  },\n  hemisphere: function() {\n    return timezone_1(this).hemisphere\n  },\n  format: function(fmt) {\n    return format_1(this, fmt)\n  },\n  unixFmt: function(fmt) {\n    return unixFmt_1(this, fmt)\n  },\n  startOf: function(unit) {\n    return startOf_1.startOf(this, unit)\n  },\n  endOf: function(unit) {\n    return startOf_1.endOf(this, unit)\n  },\n  leapYear: function() {\n    let year = this.year();\n    return fns.isLeapYear(year)\n  },\n  progress: function(unit) {\n    return progress_1(this, unit)\n  },\n  nearest: function(unit) {\n    return nearest_1(this, unit)\n  },\n  diff: function(d, unit) {\n    return diff$1(this, d, unit)\n  },\n  since: function(d) {\n    if (!d) {\n      d = this.clone().set();\n    }\n    return since_1(this, d)\n  },\n  next: function(unit) {\n    let s = this.add(1, unit);\n    return s.startOf(unit)\n  },\n  //the start of the previous year/week/century\n  last: function(unit) {\n    let s = this.subtract(1, unit);\n    return s.startOf(unit)\n  },\n  isValid: function() {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false\n    }\n    return !isNaN(this.d.getTime())\n  },\n  //travel to this timezone\n  goto: function(tz) {\n    let s = this.clone();\n    s.tz = find(tz, s.timezones); //science!\n    return s\n  },\n  //get each week/month/day between a -> b\n  every: function(unit, to) {\n    return every_1(this, unit, to)\n  },\n  isAwake: function() {\n    let hour = this.hour();\n    //10pm -> 8am\n    if (hour < 8 || hour > 22) {\n      return false\n    }\n    return true\n  },\n  isAsleep: function() {\n    return !this.isAwake()\n  },\n  //pretty-printing\n  log: function() {\n    console.log('');\n    console.log(format_1(this, 'nice-short'));\n    return this\n  },\n  logYear: function() {\n    console.log('');\n    console.log(format_1(this, 'full-short'));\n    return this\n  },\n  debug: function() {\n    let tz = this.timezone();\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year();\n    date += '\\n     - ' + this.format('time');\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')');\n    return this\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function(d) {\n    d = this.clone().set(d);\n    return d.since(this)\n  },\n  fromNow: function() {\n    let d = this.clone().set(Date.now());\n    return d.since(this)\n  },\n  weekStart: function(input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input;\n      return this\n    }\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim();\n      let num = days.short().indexOf(input);\n      if (num === -1) {\n        num = days.long().indexOf(input);\n      }\n      if (num === -1) {\n        num = 1; //go back to default\n      }\n      this._weekStart = num;\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input);\n    }\n    return this\n  }\n};\n// aliases\nmethods.inDST = methods.isDST;\nmethods.round = methods.nearest;\nmethods.each = methods.every;\nvar methods_1 = methods;\n\n// javascript setX methods like setDate() can't be used because of the local bias\n//these methods wrap around them.\n\n\n\n\n\nconst validate = n => {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10);\n  }\n  return n\n};\n\nconst order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n\n//reduce hostile micro-changes when moving dates by millisecond\nconst confirm = (s, tmp, unit) => {\n  let n = order.indexOf(unit);\n  let arr = order.slice(n, order.length);\n  for (let i = 0; i < arr.length; i++) {\n    let want = tmp[arr[i]]();\n    s[arr[i]](want);\n  }\n  return s\n};\n\nvar set = {\n  milliseconds: (s, n) => {\n    n = validate(n);\n    let current = s.millisecond();\n    let diff = current - n; //milliseconds to shift by\n    return s.epoch - diff\n  },\n\n  seconds: (s, n) => {\n    n = validate(n);\n    let diff = s.second() - n;\n    let shift = diff * milliseconds.second;\n    return s.epoch - shift\n  },\n\n  minutes: (s, n) => {\n    n = validate(n);\n    let old = s.clone();\n    let diff = s.minute() - n;\n    let shift = diff * milliseconds.minute;\n    s.epoch -= shift;\n    confirm(s, old, 'second');\n    return s.epoch\n  },\n\n  hours: (s, n) => {\n    n = validate(n);\n    if (n >= 24) {\n      n = 24;\n    } else if (n < 0) {\n      n = 0;\n    }\n    let old = s.clone();\n    let diff = s.hour() - n;\n    let shift = diff * milliseconds.hour;\n    s.epoch -= shift;\n    walk_1(s, {\n      hour: n\n    });\n    confirm(s, old, 'minute');\n    return s.epoch\n  },\n\n  //support setting time by '4:25pm' - this isn't very-well developed..\n  time: (s, str) => {\n    let m = str.match(/([0-9]{1,2}):([0-9]{1,2})(am|pm)?/);\n    if (!m) {\n      //fallback to support just '2am'\n      m = str.match(/([0-9]{1,2})(am|pm)/);\n      if (!m) {\n        return s.epoch\n      }\n      m.splice(2, 0, '0'); //add implicit 0 minutes\n    }\n    let h24 = false;\n    let hour = parseInt(m[1], 10);\n    let minute = parseInt(m[2], 10);\n    if (hour > 12) {\n      h24 = true;\n    }\n    //make the hour into proper 24h time\n    if (h24 === false) {\n      if (m[3] === 'am' && hour === 12) {\n        //12am is midnight\n        hour = 0;\n      }\n      if (m[3] === 'pm' && hour < 12) {\n        //12pm is noon\n        hour += 12;\n      }\n    }\n    s = s.hour(hour);\n    s = s.minute(minute);\n    s = s.second(0);\n    s = s.millisecond(0);\n    return s.epoch\n  },\n\n  date: (s, n) => {\n    n = validate(n);\n    //avoid setting february 31st\n    if (n > 28) {\n      const max = monthLengths_1[s.month()];\n      if (n > max) {\n        n = max;\n      }\n    }\n    //avoid setting < 0\n    if (n <= 0) {\n      n = 1;\n    }\n    walk_1(s, {\n      date: n\n    });\n    return s.epoch\n  },\n\n  //this one's tricky\n  month: (s, n) => {\n    if (typeof n === 'string') {\n      n = months.mapping()[n.toLowerCase()];\n    }\n    n = validate(n);\n    //don't go past december\n    if (n >= 12) {\n      n = 11;\n    }\n    if (n <= 0) {\n      n = 0;\n    }\n\n    let date = s.date();\n    //there's no 30th of february, etc.\n    if (date > monthLengths_1[n]) {\n      //make it as close as we can..\n      date = monthLengths_1[n];\n    }\n    walk_1(s, {\n      month: n,\n      date\n    });\n    return s.epoch\n  },\n\n  year: (s, n) => {\n    n = validate(n);\n    walk_1(s, {\n      year: n\n    });\n    return s.epoch\n  },\n\n  dayOfYear: (s, n) => {\n    n = validate(n);\n    let old = s.clone();\n    n -= 1; //days are 1-based\n    if (n <= 0) {\n      n = 0;\n    } else if (n >= 365) {\n      n = 364;\n    }\n    s = s.startOf('year');\n    s = s.add(n, 'day');\n    confirm(s, old, 'hour');\n    return s.epoch\n  }\n};\n\nconst methods$1 = {\n  millisecond: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.milliseconds(s, num);\n      return s\n    }\n    return this.d.getMilliseconds()\n  },\n  second: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.seconds(s, num);\n      return s\n    }\n    return this.d.getSeconds()\n  },\n  minute: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.minutes(s, num);\n      return s\n    }\n    return this.d.getMinutes()\n  },\n  hour: function(num) {\n    let d = this.d;\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.hours(s, num);\n      return s\n    }\n    return d.getHours()\n  },\n\n  //'3:30' is 3.5\n  hourFloat: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      let minute = num % 1;\n      minute = minute * 60;\n      let hour = parseInt(num, 10);\n      s.epoch = set.hours(s, hour);\n      s.epoch = set.minutes(s, minute);\n      return s\n    }\n    let d = this.d;\n    let hour = d.getHours();\n    let minute = d.getMinutes();\n    minute = minute / 60;\n    return hour + minute\n  },\n\n  // hour in 12h format\n  hour12: function(str) {\n    let d = this.d;\n    if (str !== undefined) {\n      let s = this.clone();\n      str = '' + str;\n      let m = str.match(/^([0-9]+)(am|pm)$/);\n      if (m) {\n        let hour = parseInt(m[1], 10);\n        if (m[2] === 'pm') {\n          hour += 12;\n        }\n        s.epoch = set.hours(s, hour);\n      }\n      return s\n    }\n    //get the hour\n    let hour12 = d.getHours();\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    }\n    if (hour12 === 0) {\n      hour12 = 12;\n    }\n    return hour12\n  },\n\n  //some ambiguity here with 12/24h\n  time: function(str) {\n    if (str !== undefined) {\n      let s = this.clone();\n      s.epoch = set.time(s, str);\n      return s\n    }\n    return `${this.h12()}:${fns.zeroPad(this.minute())}${this.ampm()}`\n  },\n\n  // either 'am' or 'pm'\n  ampm: function(input) {\n    let which = 'am';\n    let hour = this.hour();\n    if (hour >= 12) {\n      which = 'pm';\n    }\n    if (typeof input !== 'string') {\n      return which\n    }\n    //okay, we're doing a setter\n    let s = this.clone();\n    input = input.toLowerCase().trim();\n    //ampm should never change the day\n    // - so use `.hour(n)` instead of `.minus(12,'hour')`\n    if (hour >= 12 && input === 'am') {\n      //noon is 12pm\n      hour -= 12;\n      return s.hour(hour)\n    }\n    if (hour < 12 && input === 'pm') {\n      hour += 12;\n      return s.hour(hour)\n    }\n    return s\n  },\n\n  //some hard-coded times of day, like 'noon'\n  dayTime: function(str) {\n    if (str !== undefined) {\n      const times = {\n        morning: '7:00am',\n        breakfast: '7:00am',\n        noon: '12:00am',\n        lunch: '12:00pm',\n        afternoon: '2:00pm',\n        evening: '6:00pm',\n        dinner: '6:00pm',\n        night: '11:00pm',\n        midnight: '23:59pm'\n      };\n      let s = this.clone();\n      str = str || '';\n      str = str.toLowerCase();\n      if (times.hasOwnProperty(str) === true) {\n        s = s.time(times[str]);\n      }\n      return s\n    }\n    let h = this.hour();\n    if (h < 6) {\n      return 'night'\n    }\n    if (h < 12) {\n      //until noon\n      return 'morning'\n    }\n    if (h < 17) {\n      //until 5pm\n      return 'afternoon'\n    }\n    if (h < 22) {\n      //until 10pm\n      return 'evening'\n    }\n    return 'night'\n  },\n\n  //parse a proper iso string\n  iso: function(num) {\n    if (num !== undefined) {\n      return this.set(num)\n    }\n    return this.format('iso')\n  }\n};\nvar _01Time = methods$1;\n\nconst methods$2 = {\n  // # day in the month\n  date: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.date(s, num);\n      return s\n    }\n    return this.d.getDate()\n  },\n\n  //like 'wednesday' (hard!)\n  day: function(input) {\n    if (input === undefined) {\n      return this.d.getDay()\n    }\n    let original = this.clone();\n    let want = input;\n    // accept 'wednesday'\n    if (typeof input === 'string') {\n      input = input.toLowerCase();\n      want = days.short().indexOf(input);\n      if (want === -1) {\n        want = days.long().indexOf(input);\n      }\n    }\n    //move approx\n    let day = this.d.getDay();\n    let diff = day - want;\n    let s = this.subtract(diff * 24, 'hours');\n    //tighten it back up\n    walk_1(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    });\n    return s\n  },\n\n  //these are helpful name-wrappers\n  dayName: function(input) {\n    if (input === undefined) {\n      return days.long()[this.day()]\n    }\n    let s = this.clone();\n    s = s.day(input);\n    return s\n  },\n\n  //either name or number\n  month: function(input) {\n    if (input !== undefined) {\n      let s = this.clone();\n      s.epoch = set.month(s, input);\n      return s\n    }\n    return this.d.getMonth()\n  }\n};\nvar _02Date = methods$2;\n\nconst clearMinutes = s => {\n  s = s.minute(0);\n  s = s.second(0);\n  s = s.millisecond(1);\n  return s\n};\n\nconst methods$3 = {\n  // day 0-366\n  dayOfYear: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.dayOfYear(s, num);\n      return s\n    }\n    //days since newyears - jan 1st is 1, jan 2nd is 2...\n    let sum = 0;\n    let month = this.d.getMonth();\n    let tmp;\n    //count the num days in each month\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date();\n      tmp.setDate(1);\n      tmp.setYear(this.d.getFullYear()); //the year matters, because leap-years\n      tmp.setHours(1);\n      tmp.setMinutes(1);\n      tmp.setMonth(i);\n      tmp.setHours(-2); //the last day of the month\n      sum += tmp.getDate();\n    }\n    return sum + this.d.getDate()\n  },\n\n  //since the start of the year\n  week: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s = s.month(0);\n      s = s.date(1);\n      s = s.day('monday');\n      s = clearMinutes(s);\n      //don't go into last-year\n      if (s.monthName() === 'december') {\n        s = s.add(1, 'week');\n      }\n      num -= 1; //1-based\n      s = s.add(num, 'weeks');\n      return s\n    }\n    //find-out which week it is\n    let tmp = this.clone();\n    tmp = tmp.month(0);\n    tmp = tmp.date(1);\n    tmp = clearMinutes(tmp);\n    tmp = tmp.day('monday');\n    //don't go into last-year\n    if (tmp.monthName() === 'december') {\n      tmp = tmp.add(1, 'week');\n    }\n    const thisOne = this.epoch;\n    //if the week technically hasn't started yet\n    if (tmp.epoch > thisOne) {\n      return 1\n    }\n    //speed it up, if we can\n    let i = 0;\n    let skipWeeks = this.month() * 4;\n    tmp.epoch += milliseconds.week * skipWeeks;\n    i += skipWeeks;\n    for (; i < 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i\n      }\n      tmp = tmp.add(1, 'week');\n    }\n    return 52\n  },\n\n  //'january'\n  monthName: function(input) {\n    if (input === undefined) {\n      return months.long()[this.month()]\n    }\n    let s = this.clone();\n    s = s.month(input);\n    return s\n  },\n\n  //q1, q2, q3, q4\n  quarter: function(num) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '');\n        num = parseInt(num, 10);\n      }\n      if (quarters[num]) {\n        let s = this.clone();\n        let month = quarters[num][0];\n        s = s.month(month);\n        s = s.date(1);\n        s = s.startOf('day');\n        return s\n      }\n    }\n    let month = this.d.getMonth();\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1\n      }\n    }\n    return 4\n  },\n\n  //spring, summer, winter, fall\n  season: function(input) {\n    let hem = 'north';\n    if (this.hemisphere() === 'South') {\n      hem = 'south';\n    }\n    if (input !== undefined) {\n      let s = this.clone();\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1]);\n          s = s.date(1);\n          s = s.startOf('day');\n        }\n      }\n      return s\n    }\n    let month = this.d.getMonth();\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0]\n      }\n    }\n    return 'winter'\n  },\n\n  //the year number\n  year: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.year(s, num);\n      return s\n    }\n    return this.d.getFullYear()\n  },\n\n  //bc/ad years\n  era: function(str) {\n    if (str !== undefined) {\n      let s = this.clone();\n      str = str.toLowerCase();\n      //TODO: there is no year-0AD i think. may have off-by-1 error here\n      let year = s.d.getFullYear();\n      //make '1992' into 1992bc..\n      if (str === 'bc' && year > 0) {\n        s.epoch = set.year(s, year * -1);\n      }\n      //make '1992bc' into '1992'\n      if (str === 'ad' && year < 0) {\n        s.epoch = set.year(s, year * -1);\n      }\n      return s\n    }\n    if (this.d.getFullYear() < 0) {\n      return 'BC'\n    }\n    return 'AD'\n  }\n};\nvar _03Year = methods$3;\n\nconst methods$4 = Object.assign({}, _01Time, _02Date, _03Year);\n\n//aliases\nmethods$4.milliseconds = methods$4.millisecond;\nmethods$4.seconds = methods$4.second;\nmethods$4.minutes = methods$4.minute;\nmethods$4.hours = methods$4.hour;\nmethods$4.hour24 = methods$4.hour;\nmethods$4.h12 = methods$4.hour12;\nmethods$4.h24 = methods$4.hour24;\nmethods$4.days = methods$4.day;\n\nconst addMethods = Space => {\n  //hook the methods into prototype\n  Object.keys(methods$4).forEach(k => {\n    Space.prototype[k] = methods$4[k];\n  });\n};\n\nvar query = addMethods;\n\nconst order$1 = ['millisecond', 'second', 'minute', 'hour', 'date', 'month'];\nlet keep = {\n  second: order$1.slice(0, 1),\n  minute: order$1.slice(0, 2),\n  quarterhour: order$1.slice(0, 2),\n  hour: order$1.slice(0, 3),\n  date: order$1.slice(0, 4),\n  month: order$1.slice(0, 4),\n  quarter: order$1.slice(0, 4),\n  season: order$1.slice(0, 4),\n  year: order$1,\n  decade: order$1,\n  century: order$1\n};\nkeep.week = keep.hour;\nkeep.season = keep.date;\nkeep.quarter = keep.date;\n\n// Units need to be dst adjuested\nconst dstAwareUnits = {\n  year: true,\n  quarter: true,\n  season: true,\n  month: true,\n  week: true,\n  day: true\n};\n\nconst keepDate = {\n  month: true,\n  quarter: true,\n  season: true,\n  year: true\n};\n//month is the only thing we 'model/compute'\n//- because ms-shifting can be off by enough\nconst rollMonth = (want, old) => {\n  //increment year\n  if (want.month > 0) {\n    let years = parseInt(want.month / 12, 10);\n    want.year = old.year() + years;\n    want.month = want.month % 12;\n  } else if (want.month < 0) {\n    //decrement year\n    let years = Math.floor(Math.abs(want.month) / 13, 10);\n    years = Math.abs(years) + 1;\n    want.year = old.year() - years;\n    //ignore extras\n    want.month = want.month % 12;\n    want.month = want.month + 12;\n    if (want.month === 12) {\n      want.month = 0;\n    }\n  }\n  return want\n};\n\nconst addMethods$1 = SpaceTime => {\n  SpaceTime.prototype.add = function(num, unit) {\n    let s = this.clone();\n    if (!unit || num === 0) {\n      return s //don't bother\n    }\n    let old = this.clone();\n    unit = fns.normalize(unit);\n    //move forward by the estimated milliseconds (rough)\n    if (milliseconds[unit]) {\n      s.epoch += milliseconds[unit] * num;\n    } else if (unit === 'week') {\n      s.epoch += milliseconds.day * (num * 7);\n    } else if (unit === 'quarter' || unit === 'season') {\n      s.epoch += milliseconds.month * (num * 4);\n    } else if (unit === 'season') {\n      s.epoch += milliseconds.month * (num * 4);\n    } else if (unit === 'quarterhour') {\n      s.epoch += milliseconds.minute * 15 * num;\n    }\n    //now ensure our milliseconds/etc are in-line\n    let want = {};\n    if (keep[unit]) {\n      keep[unit].forEach(u => {\n        want[u] = old[u]();\n      });\n    }\n\n    if (dstAwareUnits[unit]) {\n      const diff = old.timezone().current.offset - s.timezone().current.offset;\n      s.epoch += diff * 3600 * 1000;\n    }\n\n    //ensure month/year has ticked-over\n    if (unit === 'month') {\n      want.month = old.month() + num;\n      //month is the one unit we 'model' directly\n      want = rollMonth(want, old);\n    }\n    //support coercing a week, too\n    if (unit === 'week') {\n      let sum = old.date() + num * 7;\n      if (sum <= 28 && sum > 1) {\n        want.date = sum;\n      }\n    }\n    //support 25-hour day-changes on dst-changes\n    else if (unit === 'date') {\n      //specify a naive date number, if it's easy to do...\n      let sum = old.date() + num;\n      if (sum <= 28 && sum > 1) {\n        want.date = sum;\n      }\n      //or if we haven't moved at all..\n      else if (num !== 0 && old.isSame(s, 'day')) {\n        want.date = old.date() + num;\n      }\n    }\n    //ensure year has changed (leap-years)\n    else if (unit === 'year' && s.year() === old.year()) {\n      s.epoch += milliseconds.week;\n    }\n    //these are easier\n    else if (unit === 'decade') {\n      want.year = s.year() + 10;\n    } else if (unit === 'century') {\n      want.year = s.year() + 100;\n    }\n    //keep current date, unless the month doesn't have it.\n    if (keepDate[unit]) {\n      let max = monthLengths_1[want.month];\n      want.date = old.date();\n      if (want.date > max) {\n        want.date = max;\n      }\n    }\n    walk_1(s, want);\n    return s\n  };\n\n  //subtract is only add *-1\n  SpaceTime.prototype.subtract = function(num, unit) {\n    let s = this.clone();\n    return s.add(num * -1, unit)\n  };\n  //add aliases\n  SpaceTime.prototype.minus = SpaceTime.prototype.subtract;\n  SpaceTime.prototype.plus = SpaceTime.prototype.add;\n};\n\nvar add = addMethods$1;\n\n//make a string, for easy comparison between dates\nconst print = {\n  millisecond: s => {\n    return s.epoch\n  },\n  second: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute(), s.second()].join('-')\n  },\n  minute: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute()].join('-')\n  },\n  hour: s => {\n    return [s.year(), s.month(), s.date(), s.hour()].join('-')\n  },\n  day: s => {\n    return [s.year(), s.month(), s.date()].join('-')\n  },\n  week: s => {\n    return [s.year(), s.week()].join('-')\n  },\n  month: s => {\n    return [s.year(), s.month()].join('-')\n  },\n  quarter: s => {\n    return [s.year(), s.quarter()].join('-')\n  },\n  year: s => {\n    return s.year()\n  }\n};\nprint.date = print.day;\n\nconst addMethods$2 = SpaceTime => {\n  SpaceTime.prototype.isSame = function(b, unit) {\n    let a = this;\n    if (!unit) {\n      return null\n    }\n    if (typeof b === 'string' || typeof b === 'number') {\n      b = new SpaceTime(b, this.timezone.name);\n    }\n    //support 'seconds' aswell as 'second'\n    unit = unit.replace(/s$/, '');\n\n    if (print[unit]) {\n      return print[unit](a) === print[unit](b)\n    }\n    return null\n  };\n};\n\nvar same = addMethods$2;\n\nconst addMethods$3 = SpaceTime => {\n  const methods = {\n    isAfter: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch > epoch\n    },\n    isBefore: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch < epoch\n    },\n    isEqual: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch === epoch\n    },\n    isBetween: function(start, end) {\n      start = fns.beADate(start, this);\n      end = fns.beADate(end, this);\n      let startEpoch = fns.getEpoch(start);\n      if (startEpoch === null) {\n        return null\n      }\n      let endEpoch = fns.getEpoch(end);\n      if (endEpoch === null) {\n        return null\n      }\n      return startEpoch < this.epoch && this.epoch < endEpoch\n    }\n  };\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar compare = addMethods$3;\n\nconst addMethods$4 = SpaceTime => {\n  const methods = {\n    i18n: data => {\n      //change the day names\n      if (fns.isObject(data.days)) {\n        days.set(data.days);\n      }\n      //change the month names\n      if (fns.isObject(data.months)) {\n        months.set(data.months);\n      }\n    }\n  };\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar i18n = addMethods$4;\n\nlet timezones = unpack;\n\n//fake timezone-support, for fakers (es5 class)\nconst SpaceTime = function(input$1, tz, options = {}) {\n  //the holy moment\n  this.epoch = null;\n  //the shift for the given timezone\n  this.tz = find(tz, timezones);\n  //whether to output warnings to console\n  this.silent = options.silent || true;\n\n  //does the week start on sunday, or monday:\n  this._weekStart = 1; //default to monday\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart;\n  }\n  //add getter/setters\n  Object.defineProperty(this, 'd', {\n    //return a js date object\n    get: function() {\n      let offset = quick(this);\n      //every computer is somewhere- get this computer's built-in offset\n      let bias = new Date(this.epoch).getTimezoneOffset() || 0;\n      //movement\n      let shift = bias + offset * 60; //in minutes\n      shift = shift * 60 * 1000; //in ms\n      //remove this computer's offset\n      let epoch = this.epoch + shift;\n      let d = new Date(epoch);\n      return d\n    }\n  });\n  //add this data on the object, to allow adding new timezones\n  Object.defineProperty(this, 'timezones', {\n    get: () => timezones,\n    set: obj => {\n      timezones = obj;\n      return obj\n    }\n  });\n  //parse the various formats\n  if (input$1 !== undefined || input$1 === null) {\n    let tmp = input(this, input$1, tz);\n    this.epoch = tmp.epoch;\n  }\n};\n\n//(add instance methods to prototype)\nObject.keys(methods_1).forEach(k => {\n  SpaceTime.prototype[k] = methods_1[k];\n});\n\n// ¯\\_(ツ)_/¯\nSpaceTime.prototype.clone = function() {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart\n  })\n};\n\n//append more methods\nquery(SpaceTime);\nadd(SpaceTime);\nsame(SpaceTime);\ncompare(SpaceTime);\ni18n(SpaceTime);\n\nvar spacetime = SpaceTime;\n\n// const timezones = require('../data');\n\nconst whereIts = (a, b) => {\n  let start = new spacetime(null);\n  let end = new spacetime(null);\n  start = start.time(a);\n  //if b is undefined, use as 'within one hour'\n  if (b) {\n    end = end.time(b);\n  } else {\n    end = start.add(59, 'minutes');\n  }\n\n  let startHour = start.hour();\n  let endHour = end.hour();\n  let tzs = Object.keys(start.timezones).filter(tz => {\n    if (tz.indexOf('/') === -1) {\n      return false\n    }\n    let m = new spacetime(null, tz);\n    let hour = m.hour();\n    //do 'calendar-compare' not real-time-compare\n    if (hour >= startHour && hour <= endHour) {\n      //test minutes too, if applicable\n      if (hour === startHour && m.minute() < start.minute()) {\n        return false\n      }\n      if (hour === endHour && m.minute() > end.minute()) {\n        return false\n      }\n      return true\n    }\n    return false\n  });\n  return tzs\n};\nvar whereIts_1 = whereIts;\n\nvar _version = '6.0.0';\n\nconst main$1 = (input, tz, options) => new spacetime(input, tz, options);\n\n//some helper functions on the main method\nmain$1.now = (tz, options) => new spacetime(new Date().getTime(), tz, options);\nmain$1.today = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.startOf('day')\n};\nmain$1.tomorrow = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.add(1, 'day').startOf('day')\n};\nmain$1.yesterday = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.subtract(1, 'day').startOf('day')\n};\nmain$1.extend = function(obj) {\n  Object.keys(obj).forEach(k => {\n    spacetime.prototype[k] = obj[k];\n  });\n  return this\n};\n//find tz by time\nmain$1.whereIts = whereIts_1;\nmain$1.version = _version;\n\n//aliases:\nmain$1.plugin = main$1.extend;\nvar src = main$1;\n\nexport default src;\n","const reduceTo = function(arr, n) {\n  if (arr.length <= n || arr.length <= 5) {\n    return arr\n  }\n  while (arr.length > n) {\n    //remove every other one\n    arr = arr.filter((o, i) => {\n      return i % 2 === 0\n    })\n    if (arr.length <= n || arr.length <= 5) {\n      return arr\n    }\n  }\n  return arr\n}\nmodule.exports = reduceTo\n","const reduceTo = require('./_reduce')\n\n//increment by this unit\nconst allTicks = function(start, end, unit) {\n  let ticks = []\n  start = start.add(1, unit)\n  start = start.startOf(unit)\n  while (start.isBefore(end)) {\n    ticks.push(start)\n    start = start.add(1, unit)\n  }\n  return ticks\n}\n\nconst formatTicks = function(arr, fmt, start, end) {\n  let delta = end.epoch - start.epoch\n  return arr.map(s => {\n    let percent = (s.epoch - start.epoch) / delta\n    return {\n      label: s.format(fmt),\n      epoch: s.epoch,\n      value: parseInt(percent * 1000, 10) / 1000\n    }\n  })\n}\n\nconst methods = {\n  centuries: (start, end, n) => {\n    let ticks = allTicks(start, end, 'century')\n    ticks = reduceTo(ticks, n)\n    let fmt = '{year}'\n    if (start.diff(end, 'year') > 6) {\n      fmt = '{year}'\n    }\n    ticks = formatTicks(ticks, fmt, start, end)\n    return ticks\n  },\n  decades: (start, end, n) => {\n    let ticks = allTicks(start, end, 'decade')\n    ticks = reduceTo(ticks, n)\n    let fmt = '{year}'\n    if (start.diff(end, 'year') > 6) {\n      fmt = '{year}'\n    }\n    ticks = formatTicks(ticks, fmt, start, end)\n    return ticks\n  },\n  years: (start, end, n) => {\n    let ticks = allTicks(start, end, 'year')\n    ticks = reduceTo(ticks, n)\n    let fmt = '{month-short} {year-short}'\n    if (start.diff(end, 'year') > 6) {\n      fmt = '{year}'\n    }\n    ticks = formatTicks(ticks, fmt, start, end)\n    return ticks\n  },\n  months: (start, end, n) => {\n    let ticks = allTicks(start, end, 'month')\n    ticks = reduceTo(ticks, n)\n    let fmt = '{month-short} {date}'\n    if (start.isSame(end, 'year') === false) {\n      fmt = '{month-short} {year}'\n    }\n    ticks = formatTicks(ticks, fmt, start, end)\n    return ticks\n  },\n  days: (start, end, n) => {\n    let ticks = allTicks(start, end, 'day')\n    ticks = reduceTo(ticks, n)\n    let fmt = '{month-short} {date}'\n    ticks = formatTicks(ticks, fmt, start, end)\n    return ticks\n  },\n  hours: (start, end, n) => {\n    let ticks = allTicks(start, end, 'hour')\n    ticks = reduceTo(ticks, n)\n    let fmt = '{time}'\n    if (start.isSame(end, 'day') === false) {\n      fmt = '{day-short} {hour}{ampm}'\n    }\n    ticks = formatTicks(ticks, fmt, start, end)\n    return ticks\n  },\n  minutes: (start, end, n) => {\n    let ticks = allTicks(start, end, 'minute')\n    ticks = reduceTo(ticks, n)\n    let fmt = '{time}'\n    ticks = formatTicks(ticks, fmt, start, end)\n    return ticks\n  }\n}\nmodule.exports = methods\n","module.exports = '0.2.0'","const spacetime = require('spacetime')\nconst methods = require('./methods')\nconst version = require('../_version')\n\nconst chooseMethod = function(start, end, n = 6) {\n  let diff = start.diff(end)\n  if (diff.years > 300) {\n    return methods.centuries(start, end, n)\n  }\n  if (diff.years > 30) {\n    return methods.decades(start, end, n)\n  }\n  if (diff.years > 3) {\n    return methods.years(start, end, n)\n  }\n  if (diff.months > 3) {\n    return methods.months(start, end, n)\n  }\n  if (diff.days > 3) {\n    return methods.days(start, end, n)\n  }\n  if (diff.hours > 3) {\n    return methods.hours(start, end, n)\n  }\n  if (diff.minutes > 3) {\n    return methods.minutes(start, end, n)\n  }\n  return methods.months(start, end, n)\n}\n\n//flip it around backwards\nconst reverseTicks = function(ticks) {\n  ticks = ticks.map(o => {\n    o.value = 1 - o.value\n    return o\n  })\n  return ticks.reverse()\n}\n\nconst spacetimeTicks = function(start, end, n = 6) {\n  let reverse = false\n  start = spacetime(start)\n  end = spacetime(end)\n  //reverse them, if necessary\n  if (start.epoch > end.epoch) {\n    reverse = true\n    let tmp = start.epoch\n    start.epoch = end.epoch\n    end.epoch = tmp\n  }\n  let ticks = chooseMethod(start, end, n)\n  //support backwards ticks\n  if (reverse === true) {\n    ticks = reverseTicks(ticks)\n  }\n  return ticks\n}\nspacetimeTicks.version = version\n\nmodule.exports = spacetimeTicks\n"],"names":["createCommonjsModule","fn","module","exports","getCjsExportFromNamespace","n","fns","isLeapYear","year","isDate","d","Object","prototype","toString","call","isNaN","valueOf","isArray","input","isObject","zeroPad","str","len","pad","length","Array","join","titleCase","toUpperCase","substr","ordinal","i","j","k","toCardinal","String","replace","parseInt","normalize","toLowerCase","trim","getEpoch","tmp","getTime","epoch","beADate","s","clone","set","formatTimezone","offset","delimiter","absOffset","Math","abs","sign","fns_1","fns_2","fns_3","fns_4","fns_5","fns_6","fns_7","fns_8","fns_9","fns_10","fns_11","fns_12","getMonth","getDate","getHours","shouldChange","start","end","defaultOffset","Date","bias","getTimezoneOffset","shift","current","summerTime","quickOffset","zones","timezones","obj","tz","undefined","console","warn","dst","jul","dec","hem","split","inSummer","quick","_build","_build$1","freeze","_prefixes","data","all","keys","forEach","Number","names","before","num","name","unpack","fallbackTZ","safeIntl","Intl","DateTimeFormat","format","resolvedOptions","timezone","timeZone","guessTz","guessTz_1","isOffset","isNumber","utcOffset","gmtOffset","toIana","parseOffset","m","match","parseOffset_1","local","cities","reduce","h","city","lookupTz","hasOwnProperty","test","id","Error","find","o","millisecond","second","minute","hour","day","date","month","week","milliseconds","walk","unit","previous","startUnit","original","diff","halfStep","units","valid","walkTo","getYear","seconds","wants","old","silent","walk_1","shortMonths","longMonths","buildMapping","sep","months","mapping","i18n","parseOffset$1","parseFloat","parseOffset_1$1","parseTime","arr","startOf","ampm","parseTime_1","monthLengths","monthLengths_1","hasDate","max","hasDate_1","months$1","parseYear","getFullYear","strFmt","reg","parse","givenTz","options","strParse","dates","now","tonight","today","tomorrow","add","yesterday","subtract","christmas","namedDates","minimumEpoch","defaults","handleArray","order","handleObject","assign","parseInput","shortDays","longDays","days","isoOffset","isNegative","floor","ceil","_offset","dayName","monthName","time","hour24","hour12","quarter","season","era","numeric","iso","h24","ms","toISOString","nice","aliases","mdy","dmy","ymd","printFormat","isValid","out","indexOf","sections","_","fmt","format_1","G","GG","GGG","GGGG","y","yy","yyy","yyyy","yyyyy","Q","QQ","QQQ","QQQQ","M","MM","MMM","MMMM","w","ww","dd","D","dayOfYear","DD","DDD","E","EE","EEE","EEEE","EEEEE","e","ee","eee","eeee","eeeee","a","aa","aaa","aaaa","h12","hh","H","HH","mm","ss","A","z","zz","zzz","zzzz","Z","ZZ","ZZZ","ZZZZ","addAlias","char","to","toName","unixFmt","chars","quoteOn","push","txt","c","unixFmt_1","units$1","doUnit","endOf","duration","percent","toFixed","progress","progress_1","nearest","prog","nearest_1","climb","b","isBefore","isAfter","diffOne","one","fastYear","years","msDiff","minutes","hours","weeks","waterfall","reverseDiff","main","reversed","diff$1","qualifiers","almost","over","getDiff","later","earlier","isSame","u","pluralize","value","slice","since","isNow","every","rounded","qualified","precise","englishValues","englishValue","nextUnit","nextValue","splice","since_1","seasons","north","south","quarters","units$2","quarterhour","_weekStart","q","hemisphere","decade","century","startOf_1","isDay","next","result","every_1","parseDst","epochShift","found","hasDst","Boolean","default_offset","change","back","summer","winter","isDST","timezone_1","methods","input$1","hasDST","leapYear","last","isAwake","isAsleep","log","logYear","debug","from","fromNow","weekStart","inDST","round","each","methods_1","validate","confirm","want","methods$1","getMilliseconds","getSeconds","getMinutes","hourFloat","which","dayTime","times","morning","breakfast","noon","lunch","afternoon","evening","dinner","night","midnight","_01Time","methods$2","getDay","_02Date","clearMinutes","methods$3","sum","setDate","setYear","setHours","setMinutes","setMonth","thisOne","skipWeeks","_03Year","methods$4","addMethods","Space","query","order$1","keep","dstAwareUnits","keepDate","rollMonth","addMethods$1","SpaceTime","minus","plus","print","addMethods$2","same","addMethods$3","isEqual","isBetween","startEpoch","endEpoch","compare","addMethods$4","defineProperty","get","spacetime","whereIts","startHour","endHour","tzs","filter","whereIts_1","_version","main$1","extend","version","plugin","src","reduceTo","allTicks","ticks","formatTicks","delta","map","label","centuries","decades","chooseMethod","reverseTicks","reverse","spacetimeTicks"],"mappings":"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"}